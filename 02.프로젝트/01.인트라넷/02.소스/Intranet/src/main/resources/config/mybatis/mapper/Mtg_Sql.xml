<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mtg">
	<select id="intrMtgInqy1010" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrMtgInqy1010 : 회의 시퀀스 조회 */
		SELECT 'MTG_' || LPAD(NVL(MAX(REPLACE(MTG_CD,'MTG_')),0) + 1,4,0) AS SEQUENCE_ID FROM MEETING
	</select>
	
	<select id="intrMtgInqy1011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrMtgInqy1011 : 회의 목록 조회 */
		SELECT 
		            SUB_DATA.NUM
		        ,	SUB_DATA.MTG_CD
				,	SUB_DATA.MTG_TITLE
				,	SUB_DATA.MTG_DT
				,	SUB_DATA.MTG_STM
				,	SUB_DATA.MTG_ETM
				,	SUB_DATA.ORG_NM
				,	SUB_DATA.RANK_NM
				,	SUB_DATA.MTG_IDX
				,	SUB_DATA.EMP_NM
				,	SUB_DATA.REG_DT
				,	SUB_DATA.REG_TM
				,   CASE WHEN SUB_DATA.FILE_CNT <![CDATA[>]]> 0
                        THEN 'Y'
                        ELSE 'N'
                    END AS FILE_YN
				,	SUB_DATA.LIST_CNT
		FROM (
				SELECT 
		    			M.MTG_CD
		    		,	M.MTG_TITLE
		    		,	M.MTG_DT
		    		,	M.MTG_STM
		    		,	M.MTG_ETM
		    		,	M.MTG_IDX
		    		,	E.EMP_NM
		    		,   O.ORG_NM
		    		,	R.RANK_NM
                    ,   M.REG_DT
                    ,   M.REG_TM
                    ,	RANK() OVER(ORDER BY M.MTG_CD DESC) AS NUM
                    ,	(SELECT 
      							COUNT(FILE_ID) 
      						FROM FILE_INFO 
      						WHERE FILE_ID = M.MTG_CD
      							AND USE_YN = 'Y'
      					) AS FILE_CNT
                    ,   COUNT(M.MTG_CD) OVER() AS LIST_CNT
		        FROM MEETING M
	        	LEFT OUTER JOIN EMP_INFO E
	            	ON M.MTG_IDX = E.EMP_IDX
	            LEFT OUTER JOIN ORG O
	            	ON O.ORG_CD = E.ORG_CD
                       AND O.USE_YN = 'Y'
                LEFT OUTER JOIN RANK R
	            	ON R.RANK_CD = E.RANK_CD
                    AND R.USE_YN = 'Y'
		        WHERE M.USE_YN = 'Y'
		            <if test="srchNm != null and srchNm != ''">
		            	AND REGEXP_REPLACE(LOWER(M.MTG_TITLE),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		            <if test="srchDt != null and srchDt !=''">
		            	AND M.MTG_DT = REPLACE(#{srchDt, jdbcType=VARCHAR},'-','')
		            </if>
		  			<if test="orgNm != null and orgNm != ''">
		  				AND REGEXP_REPLACE(LOWER(O.ORG_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{orgNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="rankNm != null and rankNm != ''">
		            	AND REGEXP_REPLACE(LOWER(R.RANK_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{rankNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="srchIdx != null and srchIdx != ''">
		            	AND REGEXP_REPLACE(LOWER(E.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchIdx, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
        	) SUB_DATA
 		WHERE 1=1 
 			<if test="(sIdx != null and sIdx !='') and (eIdx != null and eIdx !='')">
 				AND SUB_DATA.NUM BETWEEN #{sIdx, jdbcType=VARCHAR} AND #{eIdx, jdbcType=VARCHAR}
        	</if>
        ORDER BY SUB_DATA.MTG_DT DESC
	</select>

	<select id="intrMtgInqy1012" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrMtgInqy1012 : 메인 회의 조회 */
		SELECT 
				'' AS TITLE
			,	TO_CHAR(TO_DATE(M.MTG_DT,'YYYY-MM-DD'), 'YYYY-MM-DD') || ' 00:00:00' AS "START"
			,	TO_CHAR(TO_DATE(M.MTG_DT,'YYYY-MM-DD'), 'YYYY-MM-DD') || ' 00:00:00' AS "END"
		FROM MEETING M
		WHERE M.MTG_DT = #{mtgDt, jdbcType=VARCHAR}
		GROUP BY M.MTG_DT
	</select>
		
	<select id="intrMtgInqy1031" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrMtgInqy1031 : 회의 상세 */
		SELECT
				DATA.*
		FROM (
					SELECT 
								M.MTG_CD
							,	M.MTG_TITLE
							,	M.MTG_CONT
							,	M.MTG_IDX
							,	M.MTG_DT
							,	M.MTG_STM
							,	M.MTG_ETM
							,	M.MTG_LOC
							,	M.MTG_MBR
							,	E.ORG_CD
							,	O.ORG_NM
							,	E.RANK_CD
							,	R.RANK_NM
					FROM MEETING M
					LEFT OUTER JOIN EMP_INFO E
						ON M.MTG_IDX = E.EMP_IDX
					LEFT OUTER JOIN ORG O
						ON O.ORG_CD = E.ORG_CD
						AND O.USE_YN = 'Y'
					LEFT OUTER JOIN RANK R
						ON R.RANK_CD = E.RANK_CD
						AND R.USE_YN = 'Y'
					WHERE M.MTG_CD = #{sequenceId, jdbcType=VARCHAR}
		) DATA
	</select>
	
	<insert id="intrMtgProc1011" parameterType="java.util.HashMap">
		/* intrMtgProc1011 : 회의 등록 처리 */
		INSERT INTO MEETING
		(
				MTG_CD
			,	MTG_TITLE
			,	MTG_CONT
			,	MTG_IDX
			,	MTG_DT
			,	MTG_STM
			,	MTG_ETM
			,	MTG_LOC
			,	MTG_MBR
			,	REG_DT
			,	REG_TM
			,	USE_YN
			,	DISP_ORDER
			,	REMARK
		)
		VALUES
		(
				#{sequenceId, jdbcType=VARCHAR}
			,	#{mtgTitle, jdbcType=VARCHAR}
			,	#{mtgCont, jdbcType=VARCHAR}
			,	#{empIdx, jdbcType=VARCHAR}
			,	REPLACE(#{mtgDt, jdbcType=VARCHAR},'-', '')
			,	REPLACE(#{mtgStm, jdbcType=VARCHAR},':','')
			,	REPLACE(#{mtgEtm, jdbcType=VARCHAR},':','')
			,	#{mtgLoc, jdbcType=VARCHAR}
			,	#{mtgMbr, jdbcType=VARCHAR}
			,	TO_CHAR(SYSDATE,'YYYYMMDD')
			,	TO_CHAR(SYSDATE,'HH24MISS')
			,	'Y'
			,	(
					SELECT 
						NVL(MAX(DISP_ORDER),0) + 1 
					FROM MEETING
				)
			,	NULL
			)
	</insert>
	
	<update id="intrMtgProc1021" parameterType="java.util.HashMap">
		/* intrMtgProc1021 : 회의 삭제 처리 (수정)  */
		UPDATE MEETING
			SET USE_YN = 'N'
		WHERE MTG_CD = #{sequenceId, jdbcType=VARCHAR}
	</update>
	
	<update id="intrMtgProc1031" parameterType="java.util.HashMap">
		/* intrMtgProc1031 : 회의 수정 처리 */
		UPDATE MEETING
			SET 	MTG_TITLE = #{mtgTitle, jdbcType=VARCHAR}
				,	MTG_CONT = #{mtgCont, jdbcType=VARCHAR}
				,	MTG_IDX = #{mtgIdx, jdbcType=VARCHAR}
				,	MTG_DT = REPLACE(#{mtgDt, jdbcType=VARCHAR},'-','')
				,	MTG_STM = REPLACE(#{mtgStm, jdbcType=VARCHAR},':','')
				,	MTG_ETM = REPLACE(#{mtgEtm, jdbcType=VARCHAR},':','')
				,	MTG_LOC = #{mtgLoc, jdbcType=VARCHAR}
				,	MTG_MBR = #{mtgMbr, jdbcType=VARCHAR}
				,	REG_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
				,	REG_TM = TO_CHAR(SYSDATE,'HH24MISS')
		WHERE MTG_CD = #{sequenceId, jdbcType=VARCHAR} 
	</update>	
</mapper>