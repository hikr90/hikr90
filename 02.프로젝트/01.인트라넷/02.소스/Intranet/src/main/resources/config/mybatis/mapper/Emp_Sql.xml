<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emp">
	<select id="intrEmpInqy1010" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrEmpInqy1010 : 사원 목록 조회 */
		SELECT 
		            SUB_DATA.*
		FROM (
				SELECT 
		    			EMP.EMP_IDX
					,   EMP.DEPT_CD
                    ,   DEPT.DEPT_NM
		    		,   EMP.GRADE_CD
                    ,   GRADE.GRADE_NM
                    ,   EMP.EMP_NM
                    ,   EMP.EMP_GENDER
                    ,	EMP.EMP_PHONE
                    ,   EMP.EMP_ADDR
                    ,   EMP.EMP_ADDR_INFO
                    ,   EMP.EMP_EMAIL
                    ,   EMP.EMP_ID
                    ,   EMP.EMP_PWD
                    ,   EMP.EMP_HIRE_DATE
                    ,   EMP.EMP_RESI_DATE
                    ,	RANK() OVER(ORDER BY EMP.EMP_HIRE_DATE DESC, EMP.EMP_IDX DESC) AS NUM
                    ,   COUNT(EMP.EMP_IDX) OVER() AS LIST_CNT
					,	CASE WHEN EMP.EMP_RESI_DATE IS NOT NULL
						THEN 'N'
						ELSE 'Y' END RESI_YN
 		        FROM INTR_EMP EMP
		            LEFT OUTER JOIN INTR_DEPT DEPT
		            	ON DEPT.DEPT_CD = EMP.DEPT_CD
                        AND DEPT.USE_YN = 'Y'
		            LEFT OUTER JOIN INTR_GRADE GRADE
		            	ON GRADE.GRADE_CD = EMP.GRADE_CD
                        AND GRADE.USE_YN = 'Y'
		        WHERE EMP_ID != 'ADMIN'
		            <if test="srchNm != null and srchNm != ''">
		            	AND REGEXP_REPLACE(LOWER(EMP.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		            <if test="srchSdt != null and srchSdt !=''">
		            	AND EMP.EMP_HIRE_DATE &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
		            </if>
		            <if test="srchEdt != null and srchEdt !=''">
		            	AND EMP.EMP_HIRE_DATE &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
		            </if>
		            <if test="deptCd != null and deptCd != ''">
						AND DEPT.DEPT_CD = #{deptCd, jdbcType=VARCHAR}
					</if>
        	) SUB_DATA
 		WHERE 1=1 
 			<if test="(sIdx != null and sIdx !='') and (eIdx != null and eIdx !='')">
 				AND SUB_DATA.NUM BETWEEN #{sIdx, jdbcType=VARCHAR} AND #{eIdx, jdbcType=VARCHAR}
        	</if>
        ORDER BY SUB_DATA.EMP_HIRE_DATE DESC, SUB_DATA.EMP_NM
	</select>

	<select id="intrEmpInqy1020" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrEmpInqy1020 : 사원 목록 건수 조회 */	
		SELECT 
				COUNT(EMP.EMP_IDX) AS LIST_CNT 
		FROM INTR_EMP EMP
		WHERE 1 = 1
			AND EMP.EMP_RESI_DATE IS NULL
		    <if test="srchNm != null and srchNm != ''">
		    	AND REGEXP_REPLACE(LOWER(EMP.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		    </if>
		    <if test="srchSdt != null and srchSdt !=''">
		    	AND EMP.EMP_HIRE_DATE &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
		    </if>
		    <if test="srchEdt != null and srchEdt !=''">
		    	AND EMP.EMP_HIRE_DATE &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
		    </if>
	</select>	

	<select id="intrEmpInqy1030" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrEmpInqy1030 : 부서 목록 조회 */
		SELECT
					DEPT_CD
				,	DEPT_NM
				,	UPPR_DEPT_CD
				,	USE_YN
				,	DISP_ORDER
				,	REMARK
		FROM INTR_DEPT	
	</select>

	<select id="intrEmpInqy1040" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrEmpInqy1040 : 직급 목록 조회 */
		SELECT
					GRADE_CD
				,	GRADE_NM
				,	USE_YN
				,	DISP_ORDER
				,	REMARK
		FROM INTR_GRADE
	</select>
	
	<select id="intrEmpInqy1050" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrEmpInqy1050 : 사원 아이디 중복 조회 */
		SELECT
					EMP_IDX
				,	DEPT_CD
				,	GRADE_CD
				,	EMP_NM
				,	EMP_GENDER
				,	EMP_PHONE
				,	EMP_ADDR
				,	EMP_ADDR_INFO
				,	EMP_EMAIL
				,	EMP_ID
				,	EMP_PWD
				,	EMP_HIRE_DATE
				,	EMP_RESI_DATE				
		FROM INTR_EMP
		WHERE UPPER(EMP_ID) = UPPER(#{empId, jdbcType=VARCHAR})
	</select>

	<select id="intrEmpInqy1060" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrEmpInqy1060 : 사원 상세 조회 */
		SELECT
					EMP.EMP_IDX
				,	EMP.DEPT_CD
				,	DEPT.DEPT_NM
				,	EMP.GRADE_CD
				,	GRADE.GRADE_NM
				,	EMP.EMP_NM
				,	EMP.EMP_GENDER
				,	EMP.EMP_PHONE
				,	EMP.EMP_ADDR
				,	EMP.EMP_ADDR_INFO
				,	EMP.EMP_EMAIL
				,	EMP.EMP_ID
				,	EMP.EMP_PWD
				,	EMP.EMP_HIRE_DATE
				,	EMP.EMP_RESI_DATE
				,	CASE WHEN EMP.EMP_RESI_DATE IS NOT NULL
						THEN 'N'
						ELSE 'Y' END RESI_YN
		FROM INTR_EMP EMP
		LEFT OUTER JOIN INTR_DEPT DEPT
			ON DEPT.DEPT_CD = EMP.DEPT_CD
			AND DEPT.USE_YN = 'Y'
		LEFT OUTER JOIN INTR_GRADE GRADE
			ON GRADE.GRADE_CD = EMP.GRADE_CD
			AND GRADE.USE_YN = 'Y'
		WHERE EMP.EMP_IDX = #{empIdx, jdbcType=VARCHAR}
	</select>

	<select id="intrEmpInqy1070" resultType="CamelHashMap">
		/* intrEmpInqy1070 : 부서 사원 트리 조회 */
		SELECT 
				    SUB_DATA.*
				,   CASE WHEN SUB_DATA.EMP_NM IS NULL
						THEN 'N'
					    ELSE 'Y'
					END AS ISLEAF
		FROM (
				SELECT 
							DATA.*
					FROM (
		                    	SELECT 
		                	        		DEPT.DEPT_CD
		                  				,   DEPT.DEPT_NM
		                            	,   DEPT.UPPR_DEPT_CD
	                                    ,   '' AS GRDE_CD
	                                    ,   '' AS GRDE_NM		                            
		                            	,   LEVEL AS LV
	            				        ,   ''  AS EMP_IDX
	         				            ,   ''  AS EMP_NM
	                                    ,   0 AS ROW_NUM
			                    FROM INTR_DEPT DEPT
								WHERE DEPT.USE_YN = 'Y'
			                    	START WITH DEPT.UPPR_DEPT_CD IS NULL
			                    	CONNECT BY PRIOR DEPT.DEPT_CD = DEPT.UPPR_DEPT_CD
			                    	ORDER SIBLINGS BY DEPT.DEPT_CD
		      			) DATA
			      UNION
				  SELECT 
				  			EMP.DEPT_CD
				        ,   DEPT.DEPT_NM
				        ,   DEPT.UPPR_DEPT_CD
				        ,   EMP.GRADE_CD AS GRDE_CD
                        ,   GRDE.GRADE_NM AS GRDE_NM
				        ,   2 AS LV
				        ,   EMP.EMP_IDX
				        ,   EMP.EMP_NM
                        ,   ROW_NUMBER() OVER(ORDER BY EMP_NM ASC) AS ROW_NUM
				    FROM INTR_EMP EMP 
				    LEFT OUTER JOIN INTR_DEPT DEPT 
				    	ON EMP.DEPT_CD = DEPT.DEPT_CD
				    LEFT OUTER JOIN INTR_GRADE GRDE
                    	ON EMP.GRADE_CD = GRDE.GRADE_CD
                     WHERE EMP.EMP_RESI_DATE IS NULL
				) SUB_DATA
			WHERE 1=1
   		    ORDER BY SUB_DATA.DEPT_CD ASC , SUB_DATA.LV ASC
	</select>
	
	<select id="intrEmpInqy1080" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrEmpInqy1080 : 부서 사원 수 조회 */
		SELECT 
					DEPT.DEPT_CD
                ,   DEPT.DEPT_NM
                ,   DEPT.REG_DT
                ,   COUNT(EMP.EMP_NM) AS DEPT_CNT
		FROM INTR_DEPT DEPT
		LEFT OUTER JOIN INTR_EMP EMP
			ON EMP.DEPT_CD = DEPT.DEPT_CD
            AND DEPT.USE_YN = 'Y'
            AND EMP.EMP_RESI_DATE IS NULL
		GROUP BY DEPT.DEPT_NM, DEPT.DEPT_CD, DEPT.REG_DT
        ORDER BY DEPT_CD ASC
	</select>
	
	<insert id="intrEmpProc1010" parameterType="java.util.HashMap">
		/* intrEmpProc1010 : 사원 등록 처리 */
		INSERT INTO INTR_EMP
		(
				EMP_IDX
			,	DEPT_CD
			,	GRADE_CD
			,	EMP_NM
			,	EMP_GENDER
			,	EMP_PHONE
			,	EMP_ADDR
			,	EMP_ADDR_INFO
			,	EMP_EMAIL
			,	EMP_ID
			,	EMP_PWD
			,	EMP_HIRE_DATE
			,	EMP_RESI_DATE
		)
		VALUES
		(
				'EMP_' || #{contentIdx, jdbcType=VARCHAR}
			,	#{deptCd, jdbcType=VARCHAR}
			,	#{gradeCd, jdbcType=VARCHAR}
			,	#{empNm, jdbcType=VARCHAR}
			,	#{empGender, jdbcType=VARCHAR}
			,	#{empPhone, jdbcType=VARCHAR}
			,	#{empAddr, jdbcType=VARCHAR}
			,	#{empAddrInfo, jdbcType=VARCHAR}
			,	#{empEmail, jdbcType=VARCHAR}
			,	#{empId, jdbcType=VARCHAR}
			,	#{empPwd, jdbcType=VARCHAR}
			,	TO_CHAR(SYSDATE,'YYYYMMDD')
			,	NULL
		)
	</insert>
	
	<update id="intrEmpProc1020" parameterType="java.util.HashMap">
		/* intrEmpProc1020 : 사원 수정 처리 */
		UPDATE INTR_EMP
			SET 	DEPT_CD = #{deptCd, jdbcType=VARCHAR}
				,	GRADE_CD = #{gradeCd, jdbcType=VARCHAR}
				,	EMP_GENDER = #{empGender, jdbcType=VARCHAR}
				,	EMP_PHONE = #{empPhone, jdbcType=VARCHAR}
				,	EMP_ADDR = #{empAddr, jdbcType=VARCHAR}
				,	EMP_ADDR_INFO = #{empAddrInfo, jdbcType=VARCHAR}
				,	EMP_EMAIL = #{empEmail, jdbcType=VARCHAR}
		WHERE EMP_IDX = #{empIdx, jdbcType=VARCHAR}
	</update>
	
	<update id="intrEmpProc1030" parameterType="java.util.HashMap">
		/* intrEmpProc1030 : 사원 복직, 퇴사 처리 */
		UPDATE INTR_EMP
			SET EMP_RESI_DATE =
				CASE WHEN EMP_RESI_DATE IS NULL
					THEN TO_CHAR(SYSDATE,'YYYYMMDD')
				ELSE NULL END
		WHERE EMP_IDX = #{empIdx, jdbcType=VARCHAR}
	</update>
</mapper>