<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="core">
	<select id="intrCoreInqy1011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrCoreInqy1011 : 메뉴 조회 */
		WITH M_DATA AS 
			(
				SELECT 
							DATA.*
				FROM 
							(
								SELECT 
										DISTINCT MA.MENU_CD
								FROM AUTH A
								INNER JOIN EMPINFO E
									ON E.EMP_IDX = #{idxSet, jdbcType=VARCHAR}
									AND A.USE_YN = 'Y'
                                INNER JOIN EMP_AUTH EA
                                    ON EA.EMP_IDX = E.EMP_IDX
                                INNER JOIN MENU_AUTH MA
                                    ON MA.AUTH_CD = EA.AUTH_CD
                                GROUP BY MA.MENU_CD
							) DATA
				WHERE 1=1
			)
			SELECT 
						DATA.*
					,	LEVEL AS LV
			FROM (
					SELECT
						        M.MENU_CD 
						    ,   M.MENUTYPE_CD
						    ,   M.MENU_NM
						    ,   M.UPPR_MENU_CD
						    ,   UM.MENU_NM AS UPPR_MENU_NM
						    ,   CASE WHEN M.UPPR_MENU_CD IS NULL
						    		THEN LEAD(M.MAPPING_ID) OVER(ORDER BY M.MENU_CD ASC) 
						    		ELSE M.MAPPING_ID END AS MAPPING_ID
						    ,	CASE WHEN M.UPPR_MENU_CD IS NULL
						    		THEN LEAD(M.MENU_CD) OVER(ORDER BY M.MENU_CD ASC)
						    		ELSE M.MENU_CD END AS MENU_SET
						    ,   M.USE_YN
						    ,   M.DISP_ORDER
						    ,   M.REMARK
					FROM M_DATA
					INNER JOIN MENU M
					ON M.MENU_CD = M_DATA.MENU_CD
					LEFT OUTER JOIN MENU UM
						ON UM.MENU_CD = M.UPPR_MENU_CD
					WHERE 1=1
						<if test="menuType == 0">
							AND M.MENUTYPE_CD = '0'
						</if>
						<if test="menuType == 1">
							AND M.MENUTYPE_CD = '1'
						</if>
						
						<!-- 
						<if test="menuSet != null and menuSet != ''">
							AND (M.MENU_CD = #{menuCd, jdbcType=VARCHAR} OR M.UPPR_MENU_CD = #{menuCd, jdbcType=VARCHAR})
						</if>
						 -->
				) DATA
				START WITH DATA.UPPR_MENU_CD IS NULL
				CONNECT BY PRIOR DATA.MENU_CD = DATA.UPPR_MENU_CD
				ORDER SIBLINGS BY DATA.MENU_CD
	</select>
	
	<select id="intrCoreInqy1021" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrCoreInqy1021 : 전체 메뉴 조회 */
		SELECT 
				DATA.*
			,	LEVEL AS LV
		FROM (
				SELECT 
				        M.MENU_CD 
				    ,   M.MENUTYPE_CD
				    ,   M.MENU_NM
				    ,   M.UPPR_MENU_CD
				    ,   UM.MENU_NM AS UPPR_MENU_NM
				    ,   M.MAPPING_ID
				    ,   M.USE_YN
				    ,   M.DISP_ORDER
				    ,   M.REMARK
				FROM MENU M
				LEFT OUTER JOIN MENU UM
				ON UM.MENU_CD = M.UPPR_MENU_CD
				WHERE 1=1
			) DATA 
			START WITH DATA.UPPR_MENU_CD IS NULL
			CONNECT BY PRIOR DATA.MENU_CD = DATA.UPPR_MENU_CD
			ORDER SIBLINGS BY DATA.MENU_CD
	</select>
	
	<select id="intrCoreInqy1041" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrCoreInqy1041 : 시퀀스 채번 */
		SELECT TO_DAY, SEQ_NO + 1 AS SEQ_NO, TO_DAY || LPAD(SEQ_NO + 1,4,0) AS SEQUENCE_ID FROM SEQUENCE
	</select>
	
	<update id="intrCoreInqy1042" parameterType="java.util.HashMap">
		/* intrCoreInqy1042 : 시퀀스 저장 */
		UPDATE SEQUENCE
			SET SEQ_NO = #{seqNo, jdbcType=VARCHAR}
	</update>

	<select id="intrCoreInqy1051" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrCoreInqy1051 : 목록 건수 조회 */
		<choose>
			<when test="pageUrl.contains('Board')">
				SELECT 
					COUNT(B.BRD_ID) AS LIST_CNT 
				FROM BOARD B
				LEFT OUTER JOIN EMPINFO E
					ON B.EMP_IDX = E.EMP_IDX
				LEFT OUTER JOIN ORG O
					ON O.ORG_CD = E.ORG_CD
		          	AND O.USE_YN = 'Y'
				LEFT OUTER JOIN RANK R
					ON R.RANK_CD = E.RANK_CD
		     	  	AND R.USE_YN = 'Y'
				WHERE 1 = 1
					<if test="useYn != null and useYn != ''">
						AND B.USE_YN = #{useYn, jdbcType=VARCHAR}
					</if>
				    <if test="srchNm != null and srchNm != ''">
				    	AND REGEXP_REPLACE(LOWER(B.BRD_TITLE),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
				    </if>
				    <if test="srchSdt != null and srchSdt !=''">
				    	AND B.REG_DT &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
				    </if>
				    <if test="srchEdt != null and srchEdt !=''">
				    	AND B.REG_DT &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
				    </if>
				    <if test="orgNm != null and orgNm != ''">
				    	AND REGEXP_REPLACE(LOWER(O.ORG_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{orgNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="rankNm != null and rankNm != ''">
						AND REGEXP_REPLACE(LOWER(R.RANK_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{rankNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="useCd != null and useCd != ''">
						AND B.USE_YN = #{useCd, jdbcType=VARCHAR}
					</if>
					<if test="srchIdx != null and srchIdx != ''">
		            	AND REGEXP_REPLACE(LOWER(E.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchIdx, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
			</when>
			<when test="pageUrl.contains('Emp')">
				SELECT 
						COUNT(E.EMP_IDX) AS LIST_CNT 
				FROM EMPINFO E
				LEFT OUTER JOIN ORG O
					ON O.ORG_CD = E.ORG_CD
				LEFT OUTER JOIN RANK R
					ON R.RANK_CD = E.RANK_CD
				WHERE 1 = 1
				    <if test="srchNm != null and srchNm != ''">
				    	AND REGEXP_REPLACE(LOWER(E.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
				    </if>
				    <if test="srchSdt != null and srchSdt !=''">
				    	AND E.HIRE_DT &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
				    </if>
				    <if test="srchEdt != null and srchEdt !=''">
				    	AND E.HIRE_DT &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
				    </if>
					<if test="orgNm != null and orgNm != ''">
		  				AND REGEXP_REPLACE(LOWER(O.ORG_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{orgNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="rankNm != null and rankNm != ''">
						AND REGEXP_REPLACE(LOWER(R.RANK_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{rankNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="useCd != null and useCd != ''">
						<if test="useCd equals('Y')">
							AND E.LEAV_DT IS NULL
						</if>
						<if test="useCd equals('N')">
							AND E.LEAV_DT IS NOT NULL
						</if>
					</if>
			</when>
			<when test="pageUrl.contains('Aprv')">
				SELECT '0' AS LIST_CNT FROM DUAL
			</when>
			<when test="pageUrl.contains('Proj')">
				SELECT 
					COUNT(P.PROJ_CD) AS LIST_CNT 
				FROM PROJECT P
				LEFT OUTER JOIN EMPINFO E
					ON P.OWNER = E.EMP_IDX
				LEFT OUTER JOIN ORG O
					ON O.ORG_CD = E.ORG_CD
				LEFT OUTER JOIN RANK R
					ON R.RANK_CD = E.RANK_CD
				WHERE 1 = 1
					<if test="srchNm != null and srchNm != ''">
				    	AND REGEXP_REPLACE(LOWER(E.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
				    </if>
				    <if test="srchDt != null and srchDt !=''">
				    	AND T.REG_DT &gt;= REPLACE(#{srchDt, jdbcType=VARCHAR},'-','')
				    </if>
				    <if test="orgNm != null and orgNm != ''">
				    	AND REGEXP_REPLACE(LOWER(O.ORG_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{orgNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="rankNm != null and rankNm != ''">
						AND REGEXP_REPLACE(LOWER(R.RANK_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{rankNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="srchIdx != null and srchIdx != ''">
		            	AND REGEXP_REPLACE(LOWER(E.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchIdx, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="srchStatCd != null and srchStatCd != ''">
						AND P.STATUS = #{srchStatCd, jdbcType=VARCHAR}
					</if>
			</when>
			<when test="pageUrl.contains('Task')">
				SELECT 
					COUNT(T.TASK_ID) AS LIST_CNT 
				FROM TASK T
				LEFT OUTER JOIN EMPINFO E
					ON T.EMP_IDX = E.EMP_IDX
				LEFT OUTER JOIN ORG O
					ON O.ORG_CD = E.ORG_CD
				LEFT OUTER JOIN RANK R
					ON R.RANK_CD = E.RANK_CD
				WHERE 1 = 1
					<if test="srchNm != null and srchNm != ''">
				    	AND REGEXP_REPLACE(LOWER(E.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
				    </if>
				    <if test="srchSdt != null and srchSdt !=''">
				    	AND T.REG_DT &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
				    </if>
				    <if test="srchEdt != null and srchEdt !=''">
				    	AND T.REG_DT &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
				    </if>
				    <if test="srchDt != null and srchDt !=''">
				    	AND T.REG_DT &gt;= REPLACE(#{srchDt, jdbcType=VARCHAR},'-','')
				    </if>
				    <if test="orgNm != null and orgNm != ''">
				    	AND REGEXP_REPLACE(LOWER(O.ORG_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{orgNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
					<if test="rankNm != null and rankNm != ''">
						AND REGEXP_REPLACE(LOWER(R.RANK_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{rankNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
					</if>
			</when>
		</choose>
	</select>
</mapper>