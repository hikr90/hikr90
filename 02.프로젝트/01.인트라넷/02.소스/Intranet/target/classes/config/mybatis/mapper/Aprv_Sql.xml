<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aprv">
	<resultMap type="HashMap" id="getAprvInfo">
		<result property="contId" 		column="CONT_ID"/>
		<result property="contSid" 		column="CONT_SID"/>
		<result property="currContSid"	column="CURR_CONT_SID"/>
		<result property="aprvTitle" 	column="APRV_TITLE"/>
		<result property="tempCd" 	column="TEMP_CD"/>
		<result property="regDt" 		column="REG_DT"/>
		<result property="regTm" 		column="REG_TM"/>
		<result property="stepCd" 		column="STEP_CD"/>
		<result property="stepNm" 		column="STEP_NM"/>
		<result property="empIdx" 		column="EMP_IDX"/>
		<result property="lastAprvYn" 	column="LAST_APRV_YN"/>
		<result property="aprvEmpIdx" 	column="APRV_EMP_IDX"/>
		<result property="aprvRsltDt" 	column="APRV_RSLT_DT"/>
		<result property="aprvRsltTm" 	column="APRV_RSLT_TM"/>
		<result property="empNm" 		column="EMP_NM"/>
		<result property="deptCd" 		column="DEPT_CD"/>
		<result property="deptNm" 		column="DEPT_NM"/>
		<result property="currStepNm" 	column="CURR_STEP_NM"/>
		<result property="efctSdt" 		column="EFCT_SDT"/>
		<result property="efctEdt" 		column="EFCT_EDT"/>
		<result property="aprvCont" 	column="APRV_CONT" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>

	<select id="intrAprvInqyDao1010" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqyDao1010 : 기안 목록 조회 */
		SELECT 
			    	SUB_DATA.* 
		    	,	CASE WHEN SUB_DATA.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN SUB_DATA.STEP_NM
				    	ELSE
				    		CASE WHEN SUB_DATA.LAST_APRV_YN = 'N'
	                 	       THEN SUB_DATA.STEP_NM || ' 진행 중'
			                ELSE 
            	                CASE WHEN SUB_DATA.APRV_RSLT_DT IS NOT NULL
                	                THEN SUB_DATA.STEP_NM || ' 완료' 
                    	            ELSE SUB_DATA.STEP_NM || ' 진행 중'
                        		END 
                        	END
                        END CURR_STEP_NM
		FROM (
				SELECT
					   	ROW_NUMBER() OVER(ORDER BY APRV.REG_DT DESC) AS NUM
				    ,   	COUNT(APRV.CONT_ID) OVER() AS LIST_CNT
				    ,   APRV.CONT_ID
				    ,	APRV.CURR_CONT_SID
				    ,   APRV.EMP_IDX
				    ,	APRV_EMP.EMP_NM AS APRV_EMP_NM
				    ,	APRV_DEPT.DEPT_NM AS APRV_DEPT_NM
				    ,	APRV_GRADE.GRADE_NM AS APRV_GRADE_NM
                    ,	LINE.STEP_CD
				    ,	STEP.STEP_NM
				    ,	LINE.LAST_APRV_YN
				    ,   EMP.EMP_NM
				    ,   DEPT.DEPT_NM
				    ,	GRADE.GRADE_NM
				    ,   APRV_TITLE
				    ,   APRV.REG_DT AS APRV_REG_DT
				    ,   APRV.REG_TM AS APRV_REG_TM
                    ,   LINE.APRV_RSLT_DT
                    ,   LINE.APRV_RSLT_TM
				FROM INTR_APRV APRV
                INNER JOIN INTR_APRV_LINE LINE
                    ON LINE.CONT_ID = APRV.CONT_ID
                    AND LINE.CONT_SID = APRV.CURR_CONT_SID
                LEFT OUTER JOIN INTR_STEP STEP
                    ON STEP.STEP_CD = LINE.STEP_CD
				LEFT OUTER JOIN INTR_EMP EMP
				    ON APRV.EMP_IDX = EMP.EMP_IDX
				LEFT OUTER JOIN INTR_DEPT DEPT
				    ON DEPT.DEPT_CD = EMP.DEPT_CD
				    AND DEPT.USE_YN = 'Y'
				LEFT OUTER JOIN INTR_GRADE GRADE
					ON GRADE.GRADE_CD = EMP.GRADE_CD
					AND GRADE.USE_YN = 'Y'
				LEFT OUTER JOIN INTR_EMP APRV_EMP
					ON APRV_EMP.EMP_IDX = LINE.APRV_EMP_IDX
				LEFT OUTER JOIN INTR_DEPT APRV_DEPT
					ON APRV_DEPT.DEPT_CD = APRV_EMP.DEPT_CD
					AND APRV_DEPT.USE_YN = 'Y'
				LEFT OUTER JOIN INTR_GRADE APRV_GRADE
					ON APRV_GRADE.GRADE_CD = APRV_EMP.GRADE_CD
					AND APRV_GRADE.USE_YN = 'Y'
				WHERE 
					1=1
						AND EMP.EMP_IDX = #{empIdx, jdbcType=VARCHAR}
				    	AND APRV.USE_YN = 'Y'
				    <if test="srchNm != null and srchNm != ''">
		            	AND REGEXP_REPLACE(LOWER(APRV.APRV_TITLE),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		            <if test="srchSdt != null and srchSdt !=''">
		            	AND APRV.REG_DT &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
		            </if>
		            <if test="srchEdt != null and srchEdt !=''">
		            	AND APRV.REG_DT &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
		            </if>
		             <if test="srchEnm != null and srchEnm != ''">
		            	AND REGEXP_REPLACE(LOWER(EMP.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchEnm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		             <if test="srchAnm != null and srchAnm != ''">
		            	AND REGEXP_REPLACE(LOWER(APRV_EMP.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchAnm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
			) SUB_DATA
		WHERE 
			1=1 
			<if test="(sIdx != null and sIdx !='') and (eIdx != null and eIdx !='')">
 				AND SUB_DATA.NUM BETWEEN #{sIdx, jdbcType=VARCHAR} AND #{eIdx, jdbcType=VARCHAR}
        	</if>
		ORDER BY SUB_DATA.APRV_REG_DT DESC, SUB_DATA.APRV_REG_TM DESC
	</select>
	
	<select id="intrAprvInqyDao1020" resultType="CamelHashMap" parameterType="java.util.HashMap" resultMap="getAprvInfo">
		/* intrAprvInqyDao1020 : 결재 상세 조회 */
			SELECT 
			    	APRV.CONT_ID
			    ,	APRV.CURR_CONT_SID 
			    ,   APRV.EMP_IDX
                ,   EMP.EMP_NM
                ,	EMP.DEPT_CD
                ,	DEPT.DEPT_NM
                ,	GRDE.GRADE_NM
			    ,	APRV.APRV_TITLE 
			    ,	APRV.APRV_CONT 
			    ,	APRV.TEMP_CD 
			    ,	APRV.REG_DT
			    ,	APRV.REG_TM
			    ,	LINE.STEP_CD
			    ,	LINE.APRV_EMP_IDX
			    ,	LINE.LAST_APRV_YN
			    ,	LINE.APRV_RSLT_DT
			    ,	LINE.APRV_RSLT_TM
			    ,	STEP.STEP_NM
			    ,	APRV.EFCT_SDT
			    ,	APRV.EFCT_EDT
		    	,	CASE WHEN LINE.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN STEP.STEP_NM
				    	ELSE 
				    		CASE WHEN LINE.LAST_APRV_YN = 'N'
	                 	       THEN STEP.STEP_NM || ' 진행 중'
			                ELSE 
            	                CASE WHEN LINE.APRV_RSLT_DT IS NOT NULL
                	                THEN STEP.STEP_NM || ' 완료' 
                    	            ELSE STEP.STEP_NM || ' 진행 중'
                        		END 
                        	END
                        END CURR_STEP_NM		
        FROM INTR_APRV APRV
		INNER JOIN INTR_APRV_LINE LINE
			ON LINE.CONT_ID = APRV.CONT_ID
			AND LINE.CONT_SID = APRV.CURR_CONT_SID
		LEFT OUTER JOIN INTR_STEP STEP
			ON STEP.STEP_CD = LINE.STEP_CD
        LEFT OUTER JOIN INTR_EMP EMP
            ON EMP.EMP_IDX = APRV.EMP_IDX
        LEFT OUTER JOIN INTR_DEPT DEPT
            ON DEPT.DEPT_CD = EMP.DEPT_CD
        LEFT OUTER JOIN INTR_GRADE GRDE
            ON GRDE.GRADE_CD = EMP.GRADE_CD
		WHERE APRV.CONT_ID = #{contId, jdbcType=VARCHAR}
	</select>

	<select id="intrAprvInqyDao1040" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqyDao1040 : 현재 결재 정보 조회 */
		WITH NEXT_LINE AS
    (
        SELECT 
                DATA.CONT_ID
            ,   DATA.CONT_SID AS NEXT_CONT_SID
            ,   DATA.APRV_RSLT_DT AS NEXT_RSLT_DT
        FROM (
                SELECT 
                        APRV.CONT_ID, 
                        LINE.CONT_SID,
                        LINE.APRV_RSLT_DT,
                        ROW_NUMBER() OVER(ORDER BY CONT_SID ASC) AS NUM
                FROM INTR_APRV APRV
                LEFT OUTER JOIN INTR_APRV_LINE LINE
                    ON LINE.CONT_ID = APRV.CONT_ID
                    AND LINE.STEP_CD = 'STEP_0002'
                WHERE APRV.CONT_ID = #{contId, jdbcType=VARCHAR}
                ORDER BY LINE.CONT_SID ASC    
            ) DATA
        WHERE DATA.NUM = 1
        )
		SELECT 
                DATA.*,
                NL.*,
                CASE WHEN NL.NEXT_CONT_SID = DATA.CONT_SID AND NEXT_RSLT_DT IS NULL 
                    THEN 'Y' ELSE 'N' END AS CANCEL_YN                    
        FROM 
			(
				SELECT
							LINE.CONT_ID
						, 	LINE.CONT_SID
						,	LINE.STEP_CD
						,	APRV.EMP_IDX
						,	LINE.APRV_EMP_IDX
						,	LINE.APRV_RSLT_DT
						,	LINE.APRV_RSLT_TM
						,	LINE.APRV_RSLT_RESN
						,	LINE.USE_YN
						, 	ROW_NUMBER() OVER(ORDER BY CONT_SID ASC) AS NUM
				FROM INTR_APRV_LINE LINE
				INNER JOIN INTR_APRV APRV
					ON APRV.CONT_ID = LINE.CONT_ID
					AND LINE.CONT_SID = APRV.CURR_CONT_SID
			WHERE APRV.CONT_ID = #{contId, jdbcType=VARCHAR}
			) DATA 
            INNER JOIN NEXT_LINE NL
                ON NL.CONT_ID = DATA.CONT_ID
		WHERE DATA.NUM = 1
	</select>
	
	<select id="intrAprvInqyDao1030" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqyDao1030 : 결재선 목록 조회 */
		SELECT  
		        LINE.CONT_ID
		    ,   LINE.CONT_SID
		    ,   RANK() OVER(ORDER BY LINE.CONT_SID ASC) AS NUM
		    ,   LINE.STEP_CD
		    ,   STEP.STEP_NM
		    ,   LINE.APRV_EMP_IDX
		    ,   EMP.EMP_NM
		    ,   EMP.DEPT_CD
		    ,   DEPT.DEPT_NM
		    ,   EMP.GRADE_CD
		    ,   GRDE.GRADE_NM
		    ,   LINE.APRV_RSLT_DT
		    ,   LINE.APRV_RSLT_TM
		    ,   LINE.APRV_RSLT_RESN
		    ,	LINE.USE_YN
		    ,	LINE.DISP_ORDER
		FROM INTR_APRV_LINE LINE
		LEFT OUTER JOIN INTR_STEP STEP
			ON LINE.STEP_CD = STEP.STEP_CD
		LEFT OUTER JOIN INTR_EMP EMP
			ON EMP.EMP_IDX = LINE.APRV_EMP_IDX
		LEFT OUTER JOIN INTR_DEPT DEPT
			ON DEPT.DEPT_CD = EMP.DEPT_CD
		LEFT OUTER JOIN INTR_GRADE GRDE
			ON GRDE.GRADE_CD = EMP.GRADE_CD
		WHERE LINE.CONT_ID = #{contId, jdbcType=VARCHAR}
		ORDER BY LINE.CONT_SID ASC
	</select>
	
	<select id="intrAprvInqyDao1050" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqyDao1050 : 결재 목록 조회 */
		WITH MAIN_LINE AS
		(
		    SELECT 
		    		APRV.CONT_ID
                , 	LISTAGG(LINE.APRV_EMP_IDX,',') WITHIN GROUP (ORDER BY LINE.CONT_SID) AS LINE_EMP_IDX
		    FROM INTR_APRV APRV 
		    INNER JOIN INTR_APRV_LINE LINE
		        ON LINE.CONT_ID = APRV.CONT_ID 
		    WHERE 1=1
            GROUP BY APRV.CONT_ID
		)
		SELECT 
			    	SUB_DATA.* 
		    	,	CASE WHEN SUB_DATA.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN SUB_DATA.STEP_NM
				    	ELSE 
				    		CASE WHEN SUB_DATA.LAST_APRV_YN = 'N'
	                 	       THEN SUB_DATA.STEP_NM || ' 진행 중'
			                ELSE 
            	                CASE WHEN SUB_DATA.APRV_RSLT_DT IS NOT NULL
                	                THEN SUB_DATA.STEP_NM || ' 완료' 
                    	            ELSE SUB_DATA.STEP_NM || ' 진행 중'
                        		END 
                        	END
                        END CURR_STEP_NM                                
		FROM (
				SELECT 
				        APRV.CONT_ID
				    ,	APRV.CURR_CONT_SID
				    ,   APRV.EMP_IDX
                    ,	LINE.STEP_CD
				    ,	STEP.STEP_NM
				    ,	LINE.LAST_APRV_YN
				    ,   EMP.EMP_NM
				    ,   DEPT.DEPT_NM
				    ,	GRADE.GRADE_NM
				    ,   APRV_TITLE
				    ,   APRV.REG_DT AS APRV_REG_DT
				    ,   APRV.REG_TM AS APRV_REG_TM
                    ,   LINE.APRV_RSLT_DT
                    ,   LINE.APRV_RSLT_TM
                    ,	APRV_EMP.EMP_NM AS APRV_EMP_NM
                    ,	APRV_DEPT.DEPT_NM AS APRV_DEPT_NM
                    ,	APRV_GRADE.GRADE_NM AS APRV_GRADE_NM
                    ,   ML.LINE_EMP_IDX
				    ,   RANK() OVER(ORDER BY APRV.CONT_ID) AS NUM
				    ,   COUNT(APRV.CONT_ID) OVER() AS LIST_CNT
				FROM INTR_APRV APRV
                INNER JOIN INTR_APRV_LINE LINE
                    ON LINE.CONT_ID = APRV.CONT_ID
                    AND LINE.CONT_SID = APRV.CURR_CONT_SID
                LEFT OUTER JOIN INTR_STEP STEP
                    ON STEP.STEP_CD = LINE.STEP_CD
				LEFT OUTER JOIN INTR_EMP EMP
				    ON APRV.EMP_IDX = EMP.EMP_IDX
				LEFT OUTER JOIN INTR_DEPT DEPT
				    ON DEPT.DEPT_CD = EMP.DEPT_CD
				    AND DEPT.USE_YN = 'Y'
				LEFT OUTER JOIN INTR_GRADE GRADE
					ON GRADE.GRADE_CD = EMP.GRADE_CD
					AND GRADE.USE_YN = 'Y'
                LEFT OUTER JOIN MAIN_LINE ML
                    ON ML.CONT_ID = APRV.CONT_ID
                LEFT OUTER JOIN INTR_EMP APRV_EMP
                	ON APRV_EMP.EMP_IDX = LINE.APRV_EMP_IDX
   				LEFT OUTER JOIN INTR_DEPT APRV_DEPT
					ON APRV_DEPT.DEPT_CD = APRV_EMP.DEPT_CD
				LEFT OUTER JOIN INTR_GRADE APRV_GRADE
					ON APRV_GRADE.GRADE_CD = APRV_EMP.GRADE_CD
					AND APRV_GRADE.USE_YN = 'Y'
				WHERE 
					1=1
				    	AND APRV.USE_YN = 'Y'
				    	AND LINE.STEP_CD NOT IN ('STEP_0004', 'STEP_0005')
				    <if test="srchNm != null and srchNm != ''">
		            	AND REGEXP_REPLACE(LOWER(APRV.APRV_TITLE),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		            <if test="srchSdt != null and srchSdt !=''">
		            	AND APRV.REG_DT &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
		            </if>
		            <if test="srchEdt != null and srchEdt !=''">
		            	AND APRV.REG_DT &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
		            </if>
		            <if test="srchEnm != null and srchEnm != ''">
		            	AND REGEXP_REPLACE(LOWER(EMP.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchEnm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		             <if test="srchAnm != null and srchAnm != ''">
		            	AND REGEXP_REPLACE(LOWER(APRV_EMP.EMP_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchAnm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
			) SUB_DATA
		WHERE 
			1=1 
				AND INSTR(SUB_DATA.LINE_EMP_IDX, #{empIdx, jdbcType=VARCHAR}) > 0
			<if test="(sIdx != null and sIdx !='') and (eIdx != null and eIdx !='')">
 				AND SUB_DATA.NUM BETWEEN #{sIdx, jdbcType=VARCHAR} AND #{eIdx, jdbcType=VARCHAR}
        	</if>
		ORDER BY SUB_DATA.APRV_REG_DT DESC, SUB_DATA.APRV_REG_TM DESC
	</select>
	
	<select id="intrAprvInqyDao1060" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqyDao1060 : 나의 기안 목록 조회 */
		SELECT 
			    	SUB_DATA.* 
		    	,	CASE WHEN SUB_DATA.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN SUB_DATA.STEP_NM
				    	ELSE
				    		CASE WHEN SUB_DATA.LAST_APRV_YN = 'N'
	                 	       THEN '진행'
			                ELSE 
            	                CASE WHEN SUB_DATA.APRV_RSLT_DT IS NOT NULL
                	                THEN '완료' 
                    	            ELSE '진행'
                        		END 
                        	END
                        END CURR_STEP_NM
		FROM (
				SELECT 
				        APRV.CONT_ID
				    ,	APRV.CURR_CONT_SID
				    ,   APRV.EMP_IDX
                    ,	LINE.STEP_CD
				    ,	STEP.STEP_NM
				    ,	LINE.LAST_APRV_YN
				    ,   APRV_TITLE
				    ,   APRV.REG_DT AS APRV_REG_DT
				    ,   APRV.REG_TM AS APRV_REG_TM
                    ,   LINE.APRV_RSLT_DT
                    ,   LINE.APRV_RSLT_TM
				    ,   RANK() OVER(ORDER BY APRV.CONT_ID) AS NUM
				    ,   COUNT(APRV.CONT_ID) OVER() AS LIST_CNT
				FROM INTR_APRV APRV
                INNER JOIN INTR_APRV_LINE LINE
                    ON LINE.CONT_ID = APRV.CONT_ID
                    AND LINE.CONT_SID = APRV.CURR_CONT_SID
                LEFT OUTER JOIN INTR_STEP STEP
                    ON STEP.STEP_CD = LINE.STEP_CD
				LEFT OUTER JOIN INTR_EMP EMP
				    ON APRV.EMP_IDX = EMP.EMP_IDX
				LEFT OUTER JOIN INTR_DEPT DEPT
				    ON DEPT.DEPT_CD = EMP.DEPT_CD
				    AND DEPT.USE_YN = 'Y'
				WHERE 
					1=1
				    	AND APRV.USE_YN = 'Y'
			) SUB_DATA
		WHERE 
			1=1 
				AND SUB_DATA.EMP_IDX = #{empIdx, jdbcType=VARCHAR}
		ORDER BY SUB_DATA.APRV_REG_DT DESC, SUB_DATA.APRV_REG_TM DESC
	</select>
	
	<select id="intrAprvInqyDao1070" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqyDao1070 : 나의 결재 목록 조회 */
		WITH MAIN_LINE AS
		(
		    SELECT 
		    		APRV.CONT_ID
                , 	LISTAGG(LINE.APRV_EMP_IDX,',') WITHIN GROUP (ORDER BY LINE.CONT_SID) AS LINE_EMP_IDX
		    FROM INTR_APRV APRV 
		    INNER JOIN INTR_APRV_LINE LINE
		        ON LINE.CONT_ID = APRV.CONT_ID 
		        AND LINE.STEP_CD IN ('STEP_0002')
		    WHERE 1=1
            GROUP BY APRV.CONT_ID
		)
		SELECT 
			    	SUB_DATA.* 
		    	,	CASE WHEN SUB_DATA.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN SUB_DATA.STEP_NM
				    	ELSE 
				    		CASE WHEN SUB_DATA.LAST_APRV_YN = 'N'
	                 	       THEN '진행'
			                ELSE 
            	                CASE WHEN SUB_DATA.APRV_RSLT_DT IS NOT NULL
                	                THEN '완료' 
                    	            ELSE '진행'
                        		END 
                        	END
                        END CURR_STEP_NM                                
		FROM (
				SELECT 
				        APRV.CONT_ID
				    ,	APRV.CURR_CONT_SID
				    ,   APRV.EMP_IDX
                    ,	LINE.STEP_CD
				    ,	STEP.STEP_NM
				    ,	LINE.LAST_APRV_YN
				    ,   APRV_TITLE
				    ,   APRV.REG_DT AS APRV_REG_DT
				    ,   APRV.REG_TM AS APRV_REG_TM
                    ,   LINE.APRV_RSLT_DT
                    ,   LINE.APRV_RSLT_TM
                    ,   ML.LINE_EMP_IDX
				    ,   RANK() OVER(ORDER BY APRV.CONT_ID) AS NUM
				    ,   COUNT(APRV.CONT_ID) OVER() AS LIST_CNT
				FROM INTR_APRV APRV
                INNER JOIN INTR_APRV_LINE LINE
                    ON LINE.CONT_ID = APRV.CONT_ID
                    AND LINE.CONT_SID = APRV.CURR_CONT_SID
                LEFT OUTER JOIN INTR_STEP STEP
                    ON STEP.STEP_CD = LINE.STEP_CD
				LEFT OUTER JOIN INTR_EMP EMP
				    ON APRV.EMP_IDX = EMP.EMP_IDX
				LEFT OUTER JOIN INTR_DEPT DEPT
				    ON DEPT.DEPT_CD = EMP.DEPT_CD
				    AND DEPT.USE_YN = 'Y'
                LEFT OUTER JOIN MAIN_LINE ML
                    ON ML.CONT_ID = APRV.CONT_ID
                LEFT OUTER JOIN INTR_EMP APRV_EMP
                	ON APRV_EMP.EMP_IDX = LINE.APRV_EMP_IDX
   				LEFT OUTER JOIN INTR_DEPT APRV_DEPT
					ON APRV_DEPT.DEPT_CD = APRV_EMP.DEPT_CD
				WHERE 
					1=1
				    	AND APRV.USE_YN = 'Y'
			) SUB_DATA
		WHERE 
			1=1 
			  	AND SUB_DATA.STEP_CD NOT IN ('STEP_0004', 'STEP_0005')
				AND INSTR(SUB_DATA.LINE_EMP_IDX, #{empIdx, jdbcType=VARCHAR}) > 0
		ORDER BY SUB_DATA.APRV_REG_DT DESC, SUB_DATA.APRV_REG_TM DESC	
	</select>
	
		<insert id="intrAprvProcDao1010" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1010 : 품의문 기본 정보 등록 처리 */
		INSERT INTO INTR_APRV
		(
				CONT_ID
			,	CURR_CONT_SID
			,	EMP_IDX
			,	APRV_TITLE
			,	APRV_CONT
			,	TEMP_CD
			,	REG_DT
			,	REG_TM
			,	EFCT_SDT
			,	EFCT_EDT
			,	USE_YN
			,	DISP_ORDER
			,	REMARK
		)
		VALUES
		(
				#{contId, jdbcType=VARCHAR}
			,	LPAD(#{contSid, jdbcType=VARCHAR},4,0)
			,	#{empIdx, jdbcType=VARCHAR}
			,	#{aprvTitle, jdbcType=VARCHAR}
			,	#{aprvCont, jdbcType=VARCHAR}
			,	#{tempCd, jdbcType=VARCHAR}
			,	TO_CHAR(SYSDATE,'YYYYMMDD')
			,	TO_CHAR(SYSDATE,'HH24MISS')
			,	REPLACE(#{efctSdt, jdbcType=VARCHAR},'-','')
			,	REPLACE(#{efctEdt, jdbcType=VARCHAR},'-','')
			,	'Y'
			,	(
					SELECT 
						NVL(MAX(DISP_ORDER),0) + 1 
					FROM INTR_APRV
				)
			,	NULL
		)
	</insert>
	
	<insert id="intrAprvProcDao1020" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1020 : 품의문 결재선 등록 처리 */
		INSERT INTO INTR_APRV_LINE
		(
				CONT_ID
			,	CONT_SID
			,	STEP_CD
			,	APRV_EMP_IDX
			,	LAST_APRV_YN
			,	APRV_RSLT_DT
			,	APRV_RSLT_TM
			,	APRV_RSLT_RESN
			,	USE_YN
			,	DISP_ORDER
			,	REMARK
		)
		VALUES
		(
				#{contId, jdbcType=VARCHAR}
			,	LPAD(#{contSid, jdbcType=VARCHAR},4,0)
			,	#{stepCd, jdbcType=VARCHAR}
			,	#{aprvEmpIdx, jdbcType=VARCHAR}
			,	#{lastAprvYn, jdbcType=VARCHAR}
			<choose>
				<when test="stepCd != 'STEP_0002' and stepCd !='STEP_0003'">
					,	TO_CHAR(SYSDATE,'YYYYMMDD')
					,	TO_CHAR(SYSDATE,'HH24MISS')
				</when>
				<otherwise>
					,	NULL
					,	NULL
				</otherwise>
			</choose>
			,	NULL
			,	'Y'
			,	(
					SELECT 
						NVL(MAX(DISP_ORDER),0) + 1 
					FROM INTR_APRV_LINE WHERE CONT_ID = #{contId, jdbcType=VARCHAR}
				)
			,	NULL
		)
	</insert>
	
	<update id="intrAprvProcDao1030" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1030 : RSLT 데이터 NULL 처리 */
		UPDATE INTR_APRV_LINE
			SET 	APRV_RSLT_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
				,	APRV_RSLT_TM = TO_CHAR(SYSDATE,'HH24MISS')
				,	APRV_RSLT_RESN = #{aprvResn, jdbcType=VARCHAR}
		WHERE CONT_ID = #{contId, jdbcType=VARCHAR}
			AND CONT_SID = #{currContSid, jdbcType=VARCHAR}
	</update>	

	<update id="intrAprvProcDao1040" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1040 : CURR_CONT_SID 현 단계로 처리 */
		UPDATE INTR_APRV APRV
			SET APRV.CURR_CONT_SID = 
				(
					WITH MAIN_DATA AS (
						SELECT SUB_DATA.* FROM 
							(
								SELECT 
									LINE.CONT_ID,
									LINE.CONT_SID, 
									ROW_NUMBER() OVER(ORDER BY DECODE(STEP_CD,'STEP_0002',1), CONT_SID ASC) AS ROW_NUM 
								FROM INTR_APRV_LINE LINE 
								WHERE LINE.APRV_RSLT_DT IS NULL -- 처리 X
									AND STEP_CD = 'STEP_0002' -- 결재
									AND CONT_ID = #{contId, jdbcType=VARCHAR}
									<choose>
										<when test='lastAprvYn=="N"'>
											AND CONT_SID != #{currContSid, jdbcType=VARCHAR}
										</when>
										<otherwise>
											AND 1=1
										</otherwise>
									</choose>
							) SUB_DATA
						WHERE SUB_DATA.ROW_NUM = 1
				)
				SELECT MD.CONT_SID NEXT_CONT_SID FROM INTR_APRV APRV
					INNER JOIN INTR_APRV_LINE LINE
						ON APRV.CONT_ID = LINE.CONT_ID
						AND LINE.APRV_RSLT_DT IS NULL -- 처리 X
						AND LINE.STEP_CD = 'STEP_0002' -- 결재
					INNER JOIN MAIN_DATA MD
						ON MD.CONT_ID = APRV.CONT_ID
				        AND MD.CONT_SID = LINE.CONT_SID
				)
				WHERE APRV.CONT_ID = #{contId, jdbcType=VARCHAR}
	</update>	
	
	<update id="intrAprvProcDao1050" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1050 : 현 단계 회수로 변경 (INTR_APRV) */
		UPDATE INTR_APRV
			SET 	CURR_CONT_SID = #{tempAprvSno, jdbcType=VARCHAR}
		WHERE CONT_ID = #{contId, jdbcType=VARCHAR}
	</update>

	<update id="intrAprvProcDao1060" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1060 : 현 단계 회수로 변경 (INTR_APRV_LINE)) */
		UPDATE INTR_APRV_LINE
			SET 	STEP_CD = #{tempStepCd, jdbcType=VARCHAR}
				,	APRV_RSLT_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
				,	APRV_RSLT_TM = TO_CHAR(SYSDATE,'HH24MISS')
		WHERE CONT_ID = #{contId, jdbcType=VARCHAR}
			AND CONT_SID = '0001'
	</update>

	<update id="intrAprvProcDao1070" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1070 : 현 단계 반송으로 변경 (INTR_APRV) */
		UPDATE INTR_APRV
			SET 	CURR_CONT_SID = #{currContSid, jdbcType=VARCHAR}
		WHERE CONT_ID = #{contId, jdbcType=VARCHAR}
	</update>

	<update id="intrAprvProcDao1080" parameterType="java.util.HashMap" >
		/* intrAprvProcDao1080 : 현 단계 반송으로 변경 (INTR_APRV_LINE)) */
		UPDATE INTR_APRV_LINE
			SET 	STEP_CD = #{tempStepCd, jdbcType=VARCHAR}
				,	APRV_RSLT_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
				,	APRV_RSLT_TM = TO_CHAR(SYSDATE,'HH24MISS')
				,	APRV_RSLT_RESN = #{aprvResn, jdbcType=VARCHAR}
		WHERE CONT_ID = #{contId, jdbcType=VARCHAR}
			AND CONT_SID = #{currContSid, jdbcType=VARCHAR}
	</update>
</mapper>