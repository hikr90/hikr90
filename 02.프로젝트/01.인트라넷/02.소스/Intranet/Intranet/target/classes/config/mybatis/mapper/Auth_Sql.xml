<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="auth">
	<select id="intrAuthInqy1011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAuthInqy1011 : 권한 목록 조회 */
		SELECT 
					AUTH_CD
				,	AUTH_NM
				,	USE_YN
				,	DISP_ORDER
				,	REMARK
		FROM AUTH
		WHERE 1=1
			<if test="srchNm != null and srchNm != ''">
				AND REGEXP_REPLACE(LOWER(AUTH_NM),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
			</if>
		ORDER BY AUTH_CD
	</select>
	
	<select id="intrAuthInqy1021" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAuthInqy1021 : 권한 상세 조회 */
		SELECT 
					AUTH_CD
				,	AUTH_NM
				,	USE_YN
				,	DISP_ORDER
				,	REMARK
		FROM AUTH
		WHERE AUTH_CD = #{authCd, jdbcType=VARCHAR}
	</select>
	
	<select id="intrAuthInqy2011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAuthInqy2011 : 메뉴 권한 목록 조회 */
		SELECT 
					DATA.*
				,	LEVEL AS LV
		FROM (
				SELECT 
					    	MA.AUTH_CD
					    ,	A.AUTH_NM
					    ,	MA.MENU_CD
					    ,	M.MENU_NM
					    ,	M.MENUTYPE_CD
					    ,	M.UPPR_MENU_CD
					    ,	M.DISP_ORDER
				FROM MENU_AUTH MA
				LEFT OUTER JOIN AUTH A
					ON A.AUTH_CD = MA.AUTH_CD
					AND A.USE_YN = 'Y'
				LEFT OUTER JOIN MENU M
					ON M.MENU_CD = MA.MENU_CD
				WHERE 1=1
					AND A.AUTH_CD = #{authCd, jdbcType=VARCHAR}
			) DATA 
			START WITH DATA.UPPR_MENU_CD IS NULL
			CONNECT BY PRIOR DATA.MENU_CD = DATA.UPPR_MENU_CD
			ORDER SIBLINGS BY DATA.MENU_CD	
	</select>

	<select id="intrAuthInqy3011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAuthInqy3011 : 사용자 목록 조회 */
		WITH INTR_MAIN AS 
			(
				SELECT 
				        DATA.ORG_CD
				    ,   DATA.ORG_NM
				    ,	'' AS UPPR_ORG_CD
				    ,   '' AS EMP_IDX
			    	,   '' AS EMP_NM
			    	,   LEVEL AS LV
			    	,   'N' AS ISLEAF
				FROM 
					(
						SELECT
						        LD.ORG_CD
						    ,   LD.ORG_NM
						    ,   LD.UPPR_ORG_CD
						    ,   UD.ORG_NM AS UPPR_ORG_NM
					    	,   UD.DISP_ORDER
						FROM ORG LD
						LEFT OUTER JOIN ORG UD
							ON LD.UPPR_ORG_CD = UD.ORG_CD
							AND UD.USE_YN = 'Y'
					) DATA
					START WITH DATA.UPPR_ORG_CD IS NULL
					CONNECT BY PRIOR DATA.ORG_CD = DATA.UPPR_ORG_CD
					ORDER SIBLINGS BY DATA.ORG_CD
				)
				SELECT 
					RESULT.* 
				FROM (
						SELECT 
								IM.*
						FROM INTR_MAIN IM
						UNION ALL
						SELECT 
					        	INTR_SUB.*
					        ,	'Y'
						FROM (
								SELECT 
								        '' AS ORG_CD
								    ,   IM.ORG_NM
								    ,	E.ORG_CD AS UPPR_ORG_CD
								    ,   E.EMP_IDX
								    ,   E.EMP_NM
								    ,   IM.LV + 1  AS LV
								FROM EMP_INFO E
								LEFT OUTER JOIN INTR_MAIN IM
									ON IM.ORG_CD = E.ORG_CD
								WHERE E.LEAV_DT IS NULL
								ORDER BY E.EMP_NM
							) INTR_SUB
					) RESULT
				START WITH RESULT.UPPR_ORG_CD IS NULL
				CONNECT BY PRIOR RESULT.ORG_CD = RESULT.UPPR_ORG_CD
				ORDER SIBLINGS BY RESULT.ORG_NM ASC, RESULT.EMP_NM ASC
	</select>

	<select id="intrAuthInqy4011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAuthInqy4011 : 사용자 권한 목록 조회 */
		SELECT 
					DATA.*
		FROM (
				SELECT 
				    	EA.AUTH_CD
				    ,	A.AUTH_NM
				    ,	EA.EMP_IDX
                    ,   E.EMP_NM
				    ,	D.ORG_NM
				    ,	EA.DISP_ORDER
				FROM EMP_AUTH EA
                LEFT OUTER JOIN EMP_INFO E
                    ON E.EMP_IDX = EA.EMP_IDX
				LEFT OUTER JOIN AUTH A
					ON A.AUTH_CD = EA.AUTH_CD
					AND A.USE_YN = 'Y'
				LEFT OUTER JOIN ORG D
					ON D.ORG_CD = E.ORG_CD
				WHERE 1=1
					AND E.EMP_IDX != 'EMP_0000'
					<if test="authCd != null and authCd != ''">
						AND A.AUTH_CD = #{authCd, jdbcType=VARCHAR}
					</if>
			) DATA 
            ORDER BY DATA.EMP_NM, DATA.EMP_IDX
	</select>
	
	<select id="intrAuthInqy5011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAuthInqy5011 : 로그인 권한 사용자 목록 조회 */
		SELECT 
					EA.AUTH_CD
				, 	A.AUTH_NM
				,	E.EMP_ID
				,	E.EMP_PWD
				,	E.EMP_NM
		FROM EMP_INFO E
        INNER JOIN EMP_AUTH EA 
            ON EA.EMP_IDX = E.EMP_IDX
        LEFT OUTER JOIN AUTH A
            ON A.AUTH_CD = EA.AUTH_CD
		WHERE 1=1
		ORDER BY EA.AUTH_CD ASC, E.EMP_IDX
	</select>
	
	<insert id="intrAuthProc1011" parameterType="java.util.HashMap">
		/* intrAuthProc1011 : 권한 등록 처리 */
		INSERT INTO AUTH
		(
					AUTH_CD
				,	AUTH_NM
				,	USE_YN
				,	DISP_ORDER
				,	REMARK
		)
		VALUES
		(
				(SELECT 'AUTH_' || LPAD(NVL(MAX(SUBSTR(AUTH_CD,LENGTH(AUTH_CD)-3,LENGTH(AUTH_CD))),0) + 1,4,0) AS AUTH_CD FROM AUTH)
			,	#{authNm, jdbcType=VARCHAR}
			,	#{useYn, jdbcType=VARCHAR}
			,	(
					SELECT 
						NVL(MAX(DISP_ORDER),0) + 1 
					FROM AUTH
				)
			,	#{remark, jdbcType=VARCHAR}
		)
	</insert>

	<update id="intrAuthProc1021" parameterType="java.util.HashMap">
		/* intrAuthProc1021 : 권한 수정 처리 */
		UPDATE AUTH
			SET		AUTH_NM = #{authNm, jdbcType=VARCHAR}
				,	USE_YN = #{useYn, jdbcType=VARCHAR}
				,	REMARK = #{remark, jdbcType=VARCHAR}
		WHERE AUTH_CD = #{authCd, jdbcType=VARCHAR}
	</update>
	
	<delete id="intrAuthProc1031" parameterType="java.util.HashMap">
		/* intrAuthProc1031 : 권한 삭제 처리 */
		DELETE FROM AUTH
			WHERE AUTH_CD = #{authCd, jdbcType=VARCHAR}
	</delete>
	
	<delete id="intrAuthProc1041" parameterType="java.util.HashMap">
		/* intrAuthProc1041 : 메뉴 권한 삭제 처리 */
		DELETE FROM MENU_AUTH
			WHERE AUTH_CD = #{authCd, jdbcType=VARCHAR}
	</delete>
	
	<insert id="intrAuthProc1042" parameterType="java.util.HashMap">
		/* intrAuthProc1042 : 메뉴 권한 등록 처리 */
		INSERT INTO MENU_AUTH
		(
					AUTH_CD
				,	MENU_CD
				,	USE_YN
				,	DISP_ORDER
				,	REMARK
		)
		VALUES
		(
				#{authCd, jdbcType=VARCHAR}
			,	#{menuCd, jdbcType=VARCHAR}
			,	'Y'
			,	(
					SELECT 
						NVL(MAX(DISP_ORDER),0) + 1 
					FROM MENU_AUTH WHERE AUTH_CD = #{authCd, jdbcType=VARCHAR}
				)
			,	NULL
		)
	</insert>
	
	<delete id="intrAuthProc1051" parameterType="java.util.HashMap">
		/* intrAuthProc1051 : 사용자 권한 삭제 처리 */
		DELETE FROM EMP_AUTH
			WHERE AUTH_CD = #{authCd, jdbcType=VARCHAR}
	</delete>
	
	<insert id="intrAuthProc1052" parameterType="java.util.HashMap">
		/* intrAuthProc1052 : 사용자 권한 등록 처리 */
		INSERT INTO EMP_AUTH
		(
					AUTH_CD
				,	EMP_IDX
				,	USE_YN
				,	DISP_ORDER
				,	REMARK
		)
		VALUES
		(
				#{authCd, jdbcType=VARCHAR}
			,	#{empIdx, jdbcType=VARCHAR}
			,	'Y'
			,	(
					SELECT 
						NVL(MAX(DISP_ORDER),0) + 1 
					FROM EMP_AUTH WHERE AUTH_CD = #{authCd, jdbcType=VARCHAR}
				)
			,	NULL
		)
	</insert>
</mapper>