package ex1_abstract;

	// 추상 클래스 
	// 추상 클래스는 추상 메서드를 한개라도 가지고 있는 클래스를 의미한다. 
	// 추상 클래스임을 명시하기위해 반드시 abstract키워드를 붙여줘야한다. 
public abstract class AbsParent {
	//
	int value = 100;
	String str = "안녕";

	/*	추상 클래스
	 * 	- 미완성 클래스 (미완성 메소드가 있는) 클래스이다.
	 * 	- 추상 클래스로는 인스턴스 생성이 불가능하다.
	 * 	- 비슷한 특성의 클래스의 공통점을 가지는 미완성 설계도와, 각 특징을 가지는 클래스로 합쳐 사용하는 방식으로 사용된다.
	 * 	- 'abstract class 클래스 명칭'의 형태로 사용한다.
	 *		- 추상클래스는 반드시 하나 이상의 추상 메소드를 가진다. (그 외에는 일반적인 클래스와 다르지 않다.)
	 *		
	 *		추상 메소드
	 *			- 추상 메소드는 선언부만 존재한다. (구현부 { } 는 존재하지 않는다.)
	 *			- 메소드의 내용이 자식 클래스에따라서 달라지도록 하기위함이다. (자식 클래스에서 부모 클래스의 추상 메소드 재정의)
	 *			- 추상 메소드의 목적은 부모 클래스에서 선언된 추상 메소드가 자식 클래스에서 누락되지 않게 하기 위함이다.
	 *			- 'abstract 리턴 타입 메소드 명칭'의 형태로 사용한다.
	 *
	 *		추상화 & 구체화
	 *			(1) 추상화 :  클래스간의 공통점을 찾아내어, 공통의 조상을 만드는 작업
	 *			(2) 구체화 : 상속을 통해서 클래스 구현, 확장하는 작업
	 *
	 *			- (부모)  추상화 높음, 구체화 낮음
	 *			- (자식) 추상화 낮음, 구체화 높음
	 */
	abstract public void setValue(int value);
	//
	public int getValue() {
		return value;
	}
}
