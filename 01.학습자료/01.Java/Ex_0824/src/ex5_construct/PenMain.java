package ex5_construct;

public class PenMain {
	public static void main(String[] args) {
		
		/*	변수의 초기화
		 * 	- 변수 선언 후, 처음으로 값을 저장하는 것.
		 * 	- 선언과 동시에 적절한 값으로 지정하는 것이 좋다.
		 * 	- 멤버 변수는 초기화 없이 자동적으로 변수에 자료형에 맞는 기본 값으로 초기화되지만, 지역변수는 그렇지 않으므로 사용 전에 반드시 초기화해야 한다.
		 * 	
		 * 	초기화 방법
		 * 		(1) 명시적 초기화
		 * 			- 변수의 선언과 동시에 초기화하는 것. (가장 기본적인 방법)
		 * 
		 * 		(2) 생성자
		 * 		(3) 초기화 블럭
		 * 			(3.1) 클래스 초기화 블럭
		 * 				- 클래스 변수의 초기화
		 * 				- 클래스 내 인스턴스 블럭 { } 앞에 static을 붙여 사용한다.
		 * 				- 클래스에 메모리가 처음 로딩될 때 한번 수행된다. (가장 먼저 수행)
		 * 
		 * 			(3.2) 인스턴스 초기화 블럭
		 * 				- 인스턴스 변수의 초기화
		 * 				- 클래스 내 블럭 { } 을 작성한 뒤 안에 내용을 기입한다.
		 * 				- 생성자와 같이, 인스턴스 생성 시마다 수행된다. (생성자보다 인스턴스 초기화 블럭이 먼저 수행된다.)
		 * 				- 인스턴스 변수의 초기화는 생성자에서, 인스턴스 초기화 블럭에는 모든 생성자에서 공통적으로 수행하는 로직을 넣는다.
		 * 
		 */
		
		// 생성자가 호출되면서 값이 초기화 된 상태
		Pen p1 = new Pen();
		
		// - 이미 setter의 역할이 수행되었으므로 값을 수정할 수는 없다.
		// - (보완성 좋으나 나 자신도 못바꾼다.)
		System.out.println(p1.getCompany());
		System.out.println(p1.getColor());
		System.out.println(p1.getPrice());
		
		System.out.println("-------------");
		
		// - 생성자를 파라미터를 받아서 수행하는 오버로딩 생성자를 만들었으니
		// - 새로운 객체를 파라미터와 함께 새롭게 호출
		Pen p3 = new Pen("gold",20000);
		System.out.println(p3.getColor());
	}
}
