package ex2_value_type;

public class Ex1_valueType {
	public static void main(String[] args) {
		
		/* 주석의 다른 형태로, 다중 주석이라고 부른다. 
		 // : 한 라인 주석
		  주석 : 컴파일러가 읽지 않고 띄워넘기는 영역의 표시
		 
		 자료형(기본자료형)
		
		bit/byte는 메모리 가용량, jvm의 가상 메모리(128mb)에서 사용하는 양을 뜻한다.
		 논리형 : 	boolean - 1bit 
		 문자형 : 	char - 2byte
		 정수형 : 	byte - 1byte ....... -128 ~ 127
		 		short - 2byte ...... -32768 ~ 32767
		 		int - 4byte ........ -21억 ~ 21억 
		 		long - 8byte ....... -900경 ~ 900경
		 		
		 실수형 : 	float - 4byte ...... 
		 		double - 8byte .....
		 */
		
		// 변수 : 특정 값을 대입하여 저장하기위한 그릇 개념의 키워드(저장공간)
		// 변수 선언 규칙
		// 자료형 변수명;(선언) -> int a;
		// 변수명 = 값;(대입) -> a = 21000;
		// 변수의 선언과 대입을 동시에 진행 : 자료형 변수명 = 값;(초기화) -> int a = 21000;
		// 변수명은 대문자나 숫자로 시작하지 않는다. (숫자로는 생성이 안된다, 대문자는 class랑 혼동될 가능성으로 사용하지 않는다.)
		// 특수문자는 _를 제외하고는 사용할 수 없다. (my_name)
		// 한글로 변수명을 짓지 않는다. (할수는 있으나 java프로그램은 영어로 개발되어왔기에)
		
		// 논리형 : true, false (참과 거짓 두가지 값만 저장할 수 있다.)
		boolean b = true;
		// 저장한 값을 컴파일을 통해서 사용하는 것을 변수의 사용이라고 한다.
		System.out.println("b : " + b);
		// 변수의 초기화는 중복으로 사용할 수 없다. 
		// 단, 같은 이름의 변수에 대입은 가능하다. (대입을 할 경우, 기존의 값은 없어지고 대입한 값이 저장된다.)
		b = false;
		System.out.println("b : " + b);
		
		System.out.println("-------------------------------");
		
		// 문자형 : ''(홑따옴표)안에 한글자만 저장 가능한 자료형
		char c = 'A';
		System.out.println("c : " + c);
		c = 'B';
		System.out.println("c : " + c);
		
		// 아스키코드
		// c는 문자형의 변수로 67의 10진법의 숫자를 16진법으로 변환하여 해당 한글자의 문자로 변환하여 출력
		c = 68;
		System.out.println("c : " + c);
		
		System.out.println("-------------------------------");
		
		// 정수형 : 소수점이 아닌 일반적인 정수값
		// byte의 표현 범위인 127을 넘어가면 오류가 난다.
		byte by = 127; 
		
		int n = 2100000000;
		// jvm은 자료형에 값이 들어가는 것을 확인하는데 다시 확인하는 메모리 낭비 없이 하기위해서 int값을 기본값으로 해두었다. (컴파일 속도 향상)
		// 그래서 long을 보지 않고 바로 int로 판단하여 넣을 수 없다고 판단하는 것이다. 그래서 int의 범위가 넘어가는 값은 L을 붙여서 해당 자료형이 long임을 명시해줘야한다.
		long lo = 2200000000l;
		System.out.println("by : " + by);
		System.out.println("lo : " + lo);
		System.out.println("n : " + n);
		
		System.out.println("-------------------------------");

		// 실수형 : 소수점을 포함하는 숫자값을 담기위한 자료형
		// long과 마찬가지로, 기본값은 double이기에 float을 사용하는 경우 f를 붙여서 f라고 명시를 해주어야한다. 
		float f = 3.14f;
		double d = 3.14;
		
		// 실수형은 정수값이 입력되는 경우, 자동으로 .0을 붙여서 오류가 나지 않도록 한다.
		f = 150;
		d = 150;
		
		System.out.println("f : " + f);
		System.out.println("d : " + d);
		
		
		// 컴퓨터 구조에서의 변수
		// int x = 10; 이라는 식에서는 컴퓨터의 ram에 x라는 저장공간이 생기며 그 공간안에는 10이라는 값이 저장된다. 
		}
}
