package ex1_computer;

public class ComMain {
	public static void main(String[] args) {
		
		/* 객체지향
		 * 	- 실제 세계는 객체로 구성되어 있으며 발생하는 모든 사건은 객체간의 상호작용 이라는 개념
		 * 	
		 * 	객체지향언어의 특징
		 * 		(1) 코드의 재사용성이 높다.
		 * 		(2) 코드의 관리가 용이하다.
		 * 		(3) 코드의 신뢰성이 높다. (제어자, 메소드, 중복 코드 제거)
		 * 
		 * 	프로그래밍 관점에서 객체지향
		 * 		- 데이터와 함수의 결합 (구조체 + 함수)
		 * 		- 서로 관련된 변수들을 정의하고 이들에 대한 작업을 수행하는 함수들을 함께 정의한 것
		 */
		
		/* 클래스
		 *		- 객체를 정의해둔 것, 또는 객체의 설계도
		 *		- 객체는 실제로 존재하는 것으로, 사물 또는 개념을 뜻한다.
		 *		- 클래스는 객체 생성에 사용될 뿐, 객체 그 자체는 아니다.
		 *		- 클래스를 사용하는 클래스는 메인이 필요하다.
		 *		
		 *		구성 요소
		 *			(1) 속성 : 멤버변수, 특성, 필드, 상태
		 *			(2) 기능 : 메소드, 함수, 행위
		 */
		
		/* 인스턴스
		 * 	- 객체를 만드는 과정을 클래스의 인스턴스화라고 부르며 어떤 클래스로부터 만들어진 객체를 해당 클래스의 인스턴스라고 부른다.
		 * 	- 인스턴스와 객체는 같은 개념이나, 객체는 모든 인스턴스를 대표하는 포괄적인 개념이다.
		 * 
		 * 	인스턴스 :  어떤 클래스로부터 만들어진 것.
		 * 	객체 : 클래스로부터 만들어진 것.
		 * 
		 * 	[참고] 객체와 변수의 생성 구조
		 * 		(1) 객체
		 * 			- heap 영역에 데이터가 생성되어, stack 영역에 주소 값을 둔다.
		 * 			- 주소 값을 통해서 데이터 조회
		 * 
		 * 		(2) 변수
		 * 			- stack 영역에 데이터 생성 및 조회가 가능하다.
		 */
		
		// 클래스 생성
		// (1) 클래스의 객체를 참조하기위한 참조변수 선언
		// (2) 클래스의 객체 생성 후, 객체의 주소를 참조변수에 저장
		Computer c1 = new Computer();	// 공장에서 생산한 컴퓨터를 내가 구매
		
		// 객체 c1이 생성되었으므로 해당 객체 접근하여 hdd 등의 정보를 가져올 수 있다.
		System.out.println(c1.hdd);
		System.out.println(c1.ram);
		System.out.println(c1.cpu);
		System.out.println(c1.color);
		
		System.out.println("---------------");
		
		// 클래스 생성
		Computer c2 = new Computer();	// 친구도 공장에서 생산한 동일한 컴퓨터를 구매
		
		// 같은 제품이니 같은 정보를 가져올 수 있다.
		System.out.println(c2.hdd);
		System.out.println(c2.ram);
		System.out.println(c2.cpu);
		System.out.println(c2.color);
		
		System.out.println("---------------");
		
		
		// 클래스의 속성 값을 수정한다.
		c2.hdd = 1000;		// 친구가 자기 컴퓨터의 hdd를 업그레이드했다.
		System.out.println(c2.hdd);
		
		System.out.println("---------------");
		
		// 클래스와 객체
		// - 내 컴퓨터와 친구의 컴퓨터는 같은 설계도로 제작되었으나 서로 다른 물건이다.
		// - 하나의 설계도 (클래스) 로 두개의 제품 (객체) 을 생성한 것이다.
		c1.getInfo();
		c2.getInfo();
		
		// - 접근제한자 private가 있는 변수나 메소드는 타 클래스에서 접근할 수 없다.
		//c2.company = "apple";
	}
}
