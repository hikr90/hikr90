package ex2_control_statement;

public class Ex1_singleFor {
	public static void main(String[] args) {
		
		/* 반복문
		 *		- 특정 작업을 여러번 반복하는 제어문
		 *		
		 *		for(초기식; 조건식; 증감식;) {
		 *			// 조건식이 참일 경우 실행하는 영역
		 *		} 
		 *
		 *		(1) 초기식
		 *			- 반복문의 인덱스를 뜻하며 보편적으로는 0부터 시작한다.
		 *			- 초기식이 참인 동안에는 계속 반복한다.
		 *			- 초기식의 변수는 i=0, j=0; 형식으로 두가지 이상을 사용할 수 있다. (단 두 변수의 자료형은 같아야한다.)
		 *
		 *		(2) 증감식
		 *			- 반복문이 수행할 때마다 증감식의 내용에따라 초기식의 변수 값이 증감한다.
		 *			- 증감식에 사용되는 연산자는 단순 +, - 외에 ++, -- 같은 증감연산자, i+2 등의 증감도 가능하다.
		 *			- 초기식에서 두가지 이상의 값을 사용하는 경우, i++, j-- 의 형태로 구현할 수 있다.
		 *
		 *		(3) 조건식
		 *			- 반복문이 반복하는 조건의 내용이다.
		 *
		 *		[참고] 반복문의 순서
		 *			(1) 초기식
		 *			(2) 조건식
		 *			(3) 참인 경우 실행 영역 동작
		 *			(4) 증감식
		 *
		 *		[참고] 반복문의 변수
		 *			- 전역 변수 : main에서 사용한 변수로서, main 영역 어디에서도 따로 사용할 수 있다.
		 *			- 지역 변수 : 반복문 혹은 제어문 내에서 선언한 변수로서 해당 문장 내에서만 사용할 수 있다.
		 */
		
		// 1부터 3까지 증가하는 반복문
		for(int i=1;i<=3;i++) {
			System.out.println(i);
		}

		System.out.println("---------------");

		// 10부터 1까지 감소하는 반복문
		for(int i=10;i>=1;i--) {
			System.out.println(i);
		}

		System.out.println("---------------");
		
		// 증감식을 사용하지 않는 반복문
		// - 증감식이 없는 경우, 반복마다 조건이 동작하는데 증감의 역할을 수행하는 i++ 가 없는 경우
		// - i값은 영원히 0이므로 해당 반복문은 무한히 반복하는 무한루프식이 된다.
		for(int i=0;i<5;) {
			System.out.println(i);
			// 증감식의 역할을 한다.
			i++;
		}

		System.out.println("---------------");

		// 문제1
		// - 1 ~ 100까지 반복하는 반복문을 생성한 뒤
		// - 3의 배수만 콘솔에 나오게 하십시오.
		for(int i=1;i<=100;i++) {
			if(i%3==0) {
				System.out.println(i);
			}
		}
		
		// [참고] 향상된 for문
		// - jdk1.5부터 사용 가능해진 좀 더 쉽게 배열, 컬렉션 등의 반복문을 수행하는 방법
		// - for(타입 변수명 : 배열 또는 컬렉션) {반복할 문장} 의 구조로 사용한다.
		int [] arr = {10,20,30,40,50};
		//
		for(int key : arr) {
			System.out.println("key : "+key);
		}
	}
}
