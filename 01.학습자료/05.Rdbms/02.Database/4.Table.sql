/* 테이블 
 * 	- 데이터를 저장하는 객체
 * 	- 행과 열로 구성되어있다.
 * 
 * 	명칭 규칙
 * 		(1) 반드시 문자로 시작하며 영문으로 작성한다.
 * 		(2) 30자까지 가능하다.
 * 		(3) 문자, 숫자, _, #, &만 사용할 수 있다.
 * 		(4) 동일한 유저가 소유한 다른 객체와 명칭이 중복될 수 없다. (유저의 영역안에서는 고유 명칭만 가능)
 * 		(5) 오라클의 예약어는 명칭으로 사용할 수 없다.
 * 	
 * 	테이블 생성 예)
 * 		create table emp(
 *			id number(4),
 *			name varchar2(30),
 *			day date default sysdate)
 *			tablespace users;
 * 
 * 		- 숫자 4자리까지 작성가능한 id와 30자만큼 허용하는 문자 name값과 기본 값이 오늘인 date타입의 day컬럼을 가진 emp 테이블을 tablespace users의 위치에 생성한다.
 * 		- default 컬럼의 경우 컬럼에 null값이 들어온 경우 뒤에 있는 데이터로 대체한다는 뜻으로 default 앞의 값과 뒤의 값의 데이터 타입은 서로 같아야한다.
 * 
 * 	컬럼의 데이터 타입
 * 		(1) number(p,s)
 * 			- 가변이 가능한 (100의 용량을 가진 컬럼에 10의 데이터가 들어온 경우 10의 공간만 사용) 숫자 타입
 * 			- p는 전체 자리수, s는 소수점 자리수를 뜻한다.
 * 
 * 		(2) varchar2(문자 길이)
 * 			- 가변이 가능한 문자 타입
 * 			- 영문자 기준 최대 4000자리
 * 
 * 		(3) char(문자 길이)
 * 			- 고정 형태의 문자 값
 * 			- 영문자 기준 최대 2000자리 (성별등의 고정 값에서 사용)
 * 
 * 		(4) clob
 * 			- 가변이 가능한 문자 타입
 * 			- 최대 4기가까지 입력이 가능하다.
 * 
 * 		(5) blob
 * 			- 가변이 가능한 이진 데이터 (이미지) 타입
 * 			- 최대 4기가까지 입력이 가능하다.
 * 
 * 		(6) date
 * 			- 날짜 타입
 * 
 * 		(7) bfile
 * 			- 외부 파일에 저장된 이진 데이터 타입
 * 			- 최대 4기가까지 입력이 가능하다.
 */

/* 테이블 삭제
 * 	- 테이블 소유자이거나 drop any table의 시스템 권한이 있는 계정만 삭제 가능하다.
 * 	- 기본적으로 오라클에는 recyclebin이라는 휴지통이 존재하며 삭제한 테이블은 휴지통에 존재하게 된다.
 * 	- 단 purge로 삭제를 하게되면 휴지통에도 존재하지않는 영구삭제이므로 신중하게 삭제해야한다.
 * 	- 예)drop table 테이블명 purge;
 * 
 * recyclebin
 * 	- 휴지통으로 drop된 테이블의 정보가 보관되는 곳
 * 	- show recyclebin 입력 시 휴지통에 들어있는 목록 조회가 가능하나, 정보가 없는 경우 오류만 뜬다.
 * 	- 삭제된 데이터는 tablespace가 되는 한 계속해서 보관한다.
 * 	- 단 tablespace의 용량이 부족해진 경우 가장 오래전에 삭제했던 데이터부터 하나씩 영구적으로 삭제한다.
 * 
 * 		삭제된 데이터 비우는 방법
 * 			- 복원한 제약조건과 인덱스등의 모든 조건은 bin$ 명칭으로 복원된다.
 * 			- rename이라는 함수를 통해서 명칭을 변경해주면 된다.
 * 			- flashback table 테이블명 to before drop;
 */
select * from user_recyclebin;

-- 예) 휴지통 비우기
purge recyclebin;


/* rename 
 * 	- 명칭 변경하는 기능
 * 	- 동일한 명칭의 테이블이 순차적으로 삭제된 경우, 가장 최근의 테이블부터 복원한다.
 * 	- 명칭이 중복되는 경우 복원이 되지 않으므로 수정 후 복원한다.
 * 	- 컬럼 변경 시 인덱스나 제약조건의 명칭은 변경되지 않는다.
 * 	- rename작업은 alter를 사용하는 작업이므로 자동으로 커밋이 된다.
 * 
 * 	명칭 수정 함수 사용법
 * 		(1) 복원
 * 			- 복원과 동시에 명칭을 변경하는 함수
 * 			- 예) flashback table 테이블명 to before drop rename to 수정할 명칭;
 * 
 * 		(2) 테이블
 * 			- 예) alter table 테이블명 rename to 수정할 테이블명;
 * 
 * 		(3) 제약조건
 * 			- 예) alter table 테이블명 rename constraint 제약조건명 to 수정할 제약조건명;
 * 
 * 		(4) 인덱스
 * 			- 예) alter index 인덱스명 to 수정할 인덱스명;
 * 
 * 		(5) 컬럼
 * 			- 예) alter table 테이블명 rename column 컬럼명 to 수정할 컬럼명;
 * 
 * 			(5.1) 컬럼 추가
 * 				- 예) alter table add 컬럼명 컬럼타입;
 * 
 * 			(5.2) 컬럼의 데이터 타입 변경
 * 				- 예) alter table modify 컬럼명 수정할 데이터 타입;
 * 
 * 			(5.3) 컬럼 삭제
 * 				(5.3.1) 테이블 컬럼 삭제
 * 					- 예) drop column 컬럼명;
 * 
 * 				(5.3.2) 테이블의 컬럼 즉시 삭제
 * 					- 예) alter table 테이블명 drop column 컬럼 명칭;
 * 
 * 				(5.3.3) 테이블의 컬럼 차후 삭제
 * 					- 컬럼이 삭제되지는 않았으나 조회 상에서는 컬럼이 보이지 않게된다.
 * 					- 예) alter table 테이블명 set unused(컬럼명);
 * 
 * 					[참고] unused 데이터 조회
 * 						- 예) select * from user_unuser_col_tab;
 * 
 * 					[참고] unused 데이터 삭제
 * 						- 삭제할 데이터가 종속관계(외래키)에 있을 경우 삭제되지 않는다.
 * 						- 제약조건이 있는 경우 먼저 제약조건을 삭제한 뒤 작업을 진행한다.
 * 						- alter문이므로 자동으로 커밋된다.
 * 						- 예) alter table 테이블명 drop unused columns; 
 */
