<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- context-1-datasource.xml
			- context:property 태그를 사용하여 db.properties 파일을 읽어들여 DB에 접근하는 빈객체를 생성
			
			의존성 주입을위한 준비
				- (1) 웹 브라우저에서 http://mvnrepository.com 에 접속
				- (2) maven 속성으로 되어있는 프로젝트는 라이브러리를 온라인으로 다운받는 것이 가능하다. (폐쇠망에서는 jar파일로 대체)
				- (3) dbcp를 검색한 뒤 Commons Dbcp를 클릭한다.
				- (4) 버전을 선택한다. (보통 최신버전은 안정성 이슈로 좀 예전 버전을 선택하지만, DB쪽은 최신버전도 괜찮다.)
				- (5) maven 영역을 클릭하면 소스가 복사된다.
				- (6) pom.xml의 dependencies 태그내에 복사한 영역을 붙여넣기한다. (개발자는 자신이 개인적으로 사용하는 pom.xml을 관리하기도 한다.)
			
			데이터소스 의존성 주입
				- 각 속성의 값은 db.properties에 있는 값을 ${명칭} 형태로 가져와서 사용한다.
				- DB관련 객체는 싱글톤 방식으로 생성한다.
				- 객체 속성의 class값은 인터넷에서 찾아서 넣어주면되며, 만약 오류가 발생한다면 라이브러리를 pom.xml 넣는 과정에서 문제가 있다는 뜻이다. 
	-->
	<context:property-placeholder location="classpath:config/mybatis/db.properties"/>

	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${user}"/>
		<property name="password" value="${password}"/>
		<property name="maxActive" value="20"/>
	</bean>
	
</beans>
