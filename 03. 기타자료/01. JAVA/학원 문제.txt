JAVA 문제 모음 (프로그래머스 포함)

/* 숙제
	과수원이 있다. 배, 사과, 오렌지를 키우고 있는데, 하루 생산량은 각각 
	5개, 7개, 5개이다. 
	
	과수원에서 하루에 생산되는 과일의 총 개수를 출력하고, 
시간당 전체 과일의 평균 생산량을 출력하라
	
	단, 과일의 갯수와 하루 생산량을 저장할 변수는 int타입으로 
	평균 생산량을 저장할 변수는 float타입으로 지정하도록 한다.
	
*/


/*
 	몇 월생입니까? : 7
 	7월은 31일까지 있습니다. 

*/

/* 숙제 switch문을 이용한 계산기
	수 1 : 15
	수2 : 5
	연산자 : + 
	15 + 5 = 20
	(스위치 사용)	 
*/

/* 문제 
키보드에서 2 ~ 9중 한가지를 입력받고 입력받은 숫자의 해당되는 구구단을 출력하세요.
	단, 2~9에서 숫자가 입력되지 않았을 경우 "2~9사이의 숫자만 입력해주세요."
*/

/* 문제 
키보드에서 정수n을 입력받습니다. 
	1부터 n까지의 합을 계산하여 결과를 출력한다.
	예로 5를 받았다면 1+2+3+4+5의 결과인 15가 출력되면 된다.
	정수 : 4
	결과 : 10
*/

/* 문제 
키보드에서 n1과 n2의 정수값을 입력받는다.
	n1 ~ n2까지의 합을 계산하여 결과를 출력
	2와 5를 입력받았다면 14를 출력
	단, n1과 n2의 값이 반대로 입력되어도 결과는 똑같이 나오도록 처리

	수1 : 2
	수2 : 5
	결과 : 14
*/

/* 숙제
for문을 통해서 아래의 코드 작성 
		A B C D
		E F G H
		I J K L
*/





/* 문제
for문을 통해서 아래의 식을 생성 
		 * 
		 * *
		 * * *
		 * * * *
		 * * * * *  
*/

/* 문제
*으로 산을 찍어보기
         * 
       * * * 
     * * * * * 
   * * * * * * * 
 * * * * * * * * * 
*/

/* 문제
for문을 사용하여 아래의 코드 작성
1 2 3 4 5 6 7 8 9 10
	2 3 4 5 6 7 8 9 10 1
	4 5 6 7 8 9 10 1 2 3
	....
	10 1 2 3 4 5 6 7 8 9
*/

/* 문제 
java, jsp, android의 시험을 봤다. 
	각과목별 점수는 랜덤으로 0~130점을 대입한다.
각 과목의 검사를 do-while을 진행하는데 0~100사이의 점수가 아닌 경우에는 반드시 0 ~ 100 사이의 값이 나올 때까지 자동으로 재실행 시킬 것
	
아래와 같이 세 과목의 점수가 0에서 100사이가 되면 do while을 빠져나와 과목별 점수를 화면에 출력
	 
	java : 96
	jsp : 95
	android : 99 
*/



 /*	04 05 06 07 12
13 14 15 20 21
22 23 28 29 30
	생각한 숫자가 있나요?? 1 : 0 -> 1
		  
	16 17 18 19 20
	21 22 23 24 25
	26 27 28 29 30
	생각한 숫자가 있나요?? 1 : 0 -> 0
	 ....
	02 03 06 07 10
	11 14 15 18 19
	22 23 26 27 30
	생각한 숫자가 있나요?? 1 : 0 -> 0
		  
	당신이 생각한 숫자는 xx입니다
		  
	04 05 06 07 12 13 14 15 20 21 22 23 28 29 30
	16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
	01 03 05 07 09 11 13 15 17 19 21 23 25 27 29
	08 09 10 11 12 13 14 15 24 25 26 27 28 29 30
	02 03 06 07 10 11 14 15 18 19 22 23 26 27 30

*/

/* 문제
키보드에서 정수를 입력받고 그 수가 소수(약수가 1과 자기자신만 존재하는 수)인지 판단하는 코드를 작성
		 
정수 : 3
	3은(는) 소수입니다.
		 
	정수 : 4
	4은(는) 소수가 아닙니다. 
*/

/* 문제 
1에서 45사이의 난수를 출력하여 중복되지 않는 로또 번호를 출력하세요. 	

	int [] lotto = new int[6];
*/


/* 문제 
키보드에서 값을 입력받아, 받은 값만큼의 배열을 만들어 순차적으로 알파벳을 저장 
		
결과 
		배열의 길이 : 5
		A B C D E
*/

/* 문제 	
변수 money에 10~5000사이의 난수를 발생시켜 넣습니다. 
단, 3450, 2100... 과 같이 1의 자리 숫자는 반드시 영이 되도록 난수를 만들어야합니다.
		
발생한 난수 money를 500원, 100원, 50원, 10원짜리 동전으로 바꾸면 각각 몇개씩 거슬러지는지를 판단하시오.
		 
단 가능한 한 가장 적은 수의 동전으로 거슬러 줄 것
		 
	결과
	2590 <-- 난수로 발생한 금액
	500원 : 5
	100원 : 0
	50원 : 1
	10원 : 4	 
*/

/* 문제
	2차원 배열 arr에 담긴 모든 값의 합과 평균을 화면에 출력하시오.*/

	int [][] arr = {{3,6,5,1,8},
				{10,15,11,14,3,6},
				{1,4,7,1},
				{11,7,20,21},
				{3,7} };
*/

/* 숙제 
마방진 
	0번째 행 가운데 열 : 1
	한칸 위 오른쪽에 2
	위로 올라와서 오른쪽에 3
	위 오른쪽 : 4
		 
	3x3은 3의 배수를 만나는 위치에 이미 숫자가 있는데 
4의 경우 3아래에 찍는다. (5의 경우 5밑에 6)
*/

/* 문제 
	키보드에서 next를 통해서 문장을 입력받고 
입력받은 문장에서 소문자 a가 몇개 있는지를 출력하자
		 
	결과
	입력 : sdfkleisdalsldkaa
		 
	a의 갯수 : 2 
*/

/* 문제 
주민번호 판단 로직 구현하기 
	주민번호를 입력하세요. (-포함) : 
	991203-1022334
		 
	결과 : 당신은 99년 12월 03일에 태어난 남자입니다.
*/

/* 문제
회문수 구하기
	회문수 : 앞으로 읽어도 뒤로 읽어도 똑같이 읽히는 숫자
		 
	입력 : a1b1a
	a1b1a는(은) 회문수입니다.
		 
	입력 : aabb
	aabb는(은) 회문수가 아닙니다.
*/

/* 숙제 
	아래 배열을 통해 배우와 작품을 검색하는 로직을 작성
		 
	배우명 : 송강호
	[송강호]
	박쥐
	괴물
	관상
		 
	배우명 : aaa 을 할 경우
	해당 배우가 존재하지 않습니다.
		 
	String[][] actor = {{"[송강호]","박쥐","괴물","관상"},
				{"[이병헌]","광해","내부자들","놈놈놈"},
			{"[마동석]","성난황소","부산행","범죄도시"} };
*/


프로그래머스 문제
/* 문제
정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.

예 :: arr안에 값이 두가지 이상 있는 경우
[4,3,1,2]
-> [4,3,2]

예 :: arr안에 값이 한가지만 있는 경우
[10]
-> [-1]


*/

class Solution {
  public int[] solution(int[] arr) {
      if(arr.length == 1){
          int[] answer = {-1};
          return answer;
      }

      int[] answer = new int[arr.length-1];
      int minIndex=0;

      for(int i=0;i<arr.length;i++){
          if(arr[minIndex]>arr[i]){
              minIndex = i;
          }
      }
      for(int i=minIndex+1;i<arr.length;i++){
          arr[i-1] = arr[i];
      }
      for(int i=0;i<answer.length;i++){
          answer[i] = arr[i];
      }
      return answer;
  }
}

/* 문제
 	main 클래스에서 키보드에서 출력할 단을 입력받아, 해당 단을 
test클래스의 showTable()메소드를 거쳐 화면에 출력하시오.
	
구구단은 2단에서 9단만 나오도록하고 만약 해당하는 단이 나오지 않으면 
"정확한 숫자를 입력해주세요."라고 나오게해주세요.
*/

/*숙제
 main에서 0에서 9사이의 난수를 100개를 만든다.
	 발생한 난수를 통해 아래의 결과를 도출
	 그래프를 출력하는 함수는 test메서드에서 생성하시오. 
 
	 결과 : 1240912850198309128310901 <-- 난수 100개
	 0의 개수:### 3
	 1의 개수:##### 5
	 2의 개수:# 1
	  ....
	 9의 개수:#### 4
*/

/* 문제
test클래스에서 1에서 50 사이의 랜덤값을 받은 뒤, 정답인지 체크하는 메서드를 
생성하시오. 

main에서 키보드에서 정답이라고 생각되는 값을 받아서
	난수가 입력받은 값보다 높은지, 낮은지 보여주는 코드를 작성하시오.

값이 정답이 아닌한 코드는 while문에서 반복되게 하며 만약 정답을 맞출 경우 
while문을 나오도록 하시오.
*/

/* 숙제
	첫번째 메서드 호출 ---> 빵을 만들었습니다.
	----------------------
	두번째 메서드 호출 
	빵을 만들었습니다. 
빵을 만들었습니다.
빵을 만들었습니다.
요청하신 2개의 빵을 만들었습니다.
	----------------------
	세번째 메서드 호출 ---> 
	크림빵을 만들었습니다.
크림빵을 만들었습니다.
크림빵을 만들었습니다.
	요청하신 3개의 크림빵을 만들었습니다. 
*/

/* 문제
	Calculator 클래스를 생성한 뒤, 계산기 메서드를 생성하고
	CalPlus, CalMinus 클래스를 생성하여 계산기 메서드를 오버라이딩하여 
CalMain클래스에서 동작시키는 계산기 생성
*/

/* 문제 
키보드에서 정수값을 입력받아, 정상이라면 결과가 출력되면 되고 
	만약 정수가 아닌 값을 입력한다면 정수만 입력할 수 있습니다. 
라는 오류 메세지 출력
*/

/* 문제
	정수 받고 결과를 받는다. 
	
	정수 : aa
	aa은(는) 정수가 아닙니다.
*/

/* 문제 
키보드에서 정수값을 입력받아, 정상적이라면 결과가 출력되면 되고 
만약 정수가 아닌 값을 입력한다면 정수만 입력할 수 있습니다.
라는 오류 메세지 출력
*/

/* 문제
	 정수 받고 결과를 받는다. 
	 
	 정수 : aa
	 aa은(는) 정수가 아닙니다.
*/

/* 문제
  	키보드에서 정수값을 입력받고 Test클래스로 전달하면 
	 
	 run메서드에서 입력받은 숫자를 1씩 감소시키다가 
	 0이 되었을 때, 스레드를 빠져나오도록 처리
 */

/* 문제
1~100사이의 난수 두개를 더하는 문제를 출제
 	키보드에서 출제된 문제의 정답을 입력받고
 	총 다섯문제가 정답처리되면 프로그램을 종료하며
 	몇초가 걸렸는지를 화면에 출력
 
 	23 + 45 = 68(입력)
 	정답!!
 	35 + 100 = 1
 	오답..
 	53 + 28 = 81
 	정답!!
  
 	결과 : 25초
  
 	프로그램 완전히 종료 
 */

/* 문제
컬렉션 HashSet을 통한 로또 번호 생성기
*/


/* 결과
	id : aaaa
	pw : 1111
	 
	아이디가 존재하지 않습니다.
	 
	id : lee
	pw : 4444 
	 
	비밀번호가 일치하지 않습니다.
*/

HashMap<String, Integer> map = new HashMap<String, Integer>();
		map.put("kim", 1111);
		map.put("lee", 2222);
		map.put("park", 3333);

/* 문제
	id : aaa
	[aaa]
	id : bbb
	[aaa, bbb]
	id : aaa
	할 경우, 중복된 아이디 입니다.
	id : 
*/


/* 문제
	공유폴더에 test.txt에 아무 글자나 적어놓고
	test.txt를 읽어서 회문수인지 아닌지를 판단하시오.
*/

/* 문제
	test.txt의 내용을 읽어온 후, 대문자와 소문자가 각각 몇개씩 존재하는지 
출력하시오.
	 
	결과
	대문자 : 
	소문자 : */
