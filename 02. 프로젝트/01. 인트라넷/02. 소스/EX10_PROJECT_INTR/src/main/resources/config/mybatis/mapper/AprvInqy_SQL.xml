<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aprvInqy">
	<resultMap type="HashMap" id="getAprvInfo">
		<result property="aprvIdx" 		column="APRV_IDX"/>
		<result property="aprvSno" 		column="APRV_SNO"/>
		<result property="currAprvSno"	column="CURR_APRV_SNO"/>
		<result property="aprvTitle" 	column="APRV_TITLE"/>
		<result property="templateCd" 	column="TEMPLATE_CD"/>
		<result property="regDt" 		column="REG_DT"/>
		<result property="regTm" 		column="REG_TM"/>
		<result property="stepCd" 		column="STEP_CD"/>
		<result property="stepNm" 		column="STEP_NM"/>
		<result property="empIdx" 		column="EMP_IDX"/>
		<result property="lastAprvYn" 	column="LAST_APRV_YN"/>
		<result property="aprvEmpIdx" 	column="APRV_EMP_IDX"/>
		<result property="aprvRsltDt" 	column="APRV_RSLT_DT"/>
		<result property="aprvRsltTm" 	column="APRV_RSLT_TM"/>
		<result property="empNm" 		column="EMP_NM"/>
		<result property="deptCd" 		column="DEPT_CD"/>
		<result property="deptNm" 		column="DEPT_NM"/>
		<result property="currStepNm" 	column="CURR_STEP_NM"/>
		<result property="efctSdt" 		column="EFCT_SDT"/>
		<result property="efctEdt" 		column="EFCT_EDT"/>
		<result property="aprvContent" 	column="APRV_CONTENT" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>

	<select id="intrAprvInqy10101010" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqy10101010 : 기안 목록 조회 */
		SELECT 
			    	SUB_DATA.* 
		    	,	CASE WHEN SUB_DATA.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN SUB_DATA.STEP_NM
				    	ELSE
				    		CASE WHEN SUB_DATA.LAST_APRV_YN = 'N'
	                 	       THEN SUB_DATA.STEP_NM || ' 진행 중'
			                ELSE 
            	                CASE WHEN SUB_DATA.APRV_RSLT_DT IS NOT NULL
                	                THEN SUB_DATA.STEP_NM || ' 완료' 
                    	            ELSE SUB_DATA.STEP_NM || ' 진행 중'
                        		END 
                        	END
                        END CURR_STEP_NM
		    	,   CASE WHEN SUB_DATA.FILE_CNT <![CDATA[>]]> 0
		            THEN 'Y'
		            ELSE 'N'
		            END AS FILE_YN
		FROM (
				SELECT 
				        APRV.APRV_IDX
				    ,	APRV.CURR_APRV_SNO
				    ,   APRV.EMP_IDX
				    ,	APRV_EMP.EMP_NM AS APRV_EMP_NM
				    ,	APRV_DEPT.DEPT_NM AS APRV_DEPT_NM
                    ,	LINE.STEP_CD
				    ,	STEP.STEP_NM
				    ,	LINE.LAST_APRV_YN
				    ,   EMP.EMP_NM
				    ,   DEPT.DEPT_NM
				    ,   APRV_TITLE
				    ,   APRV.REG_DT AS APRV_REG_DT
				    ,   APRV.REG_TM AS APRV_REG_TM
                    ,   LINE.APRV_RSLT_DT
                    ,   LINE.APRV_RSLT_TM
				    ,   RANK() OVER(ORDER BY APRV.APRV_IDX) AS NUM
				    ,   COUNT(APRV.APRV_IDX) OVER() AS LIST_CNT
				    ,   (SELECT 
				            COUNT(CONTENT_IDX)
				         FROM INTR_FILE
				         WHERE CONTENT_IDX = APRV.APRV_IDX
				            AND USE_YN = 'Y'
				        ) AS FILE_CNT
				FROM INTR_APRV APRV
                INNER JOIN INTR_APRV_LINE LINE
                    ON LINE.APRV_IDX = APRV.APRV_IDX
                    AND LINE.APRV_SNO = APRV.CURR_APRV_SNO
                    AND APRV.TEMPLATE_CD = 'TEMP_0001'
                LEFT OUTER JOIN INTR_STEP STEP
                    ON STEP.STEP_CD = LINE.STEP_CD
				LEFT OUTER JOIN INTR_EMP EMP
				    ON APRV.EMP_IDX = EMP.EMP_IDX
				LEFT OUTER JOIN INTR_DEPT DEPT
				    ON DEPT.DEPT_CD = EMP.DEPT_CD
				    AND DEPT.USE_YN = 'Y'
				LEFT OUTER JOIN INTR_EMP APRV_EMP
					ON APRV_EMP.EMP_IDX = LINE.APRV_EMP_IDX
				LEFT OUTER JOIN INTR_DEPT APRV_DEPT
					ON APRV_DEPT.DEPT_CD = APRV_EMP.DEPT_CD
				WHERE 
					1=1
				    	AND APRV.USE_YN = 'Y'
				    <if test="srchNm != null and srchNm != ''">
		            	AND REGEXP_REPLACE(LOWER(APRV.APRV_TITLE),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		            <if test="srchSdt != null and srchSdt !=''">
		            	AND APRV.REG_DT &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
		            </if>
		            <if test="srchEdt != null and srchEdt !=''">
		            	AND APRV.REG_DT &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
		            </if>
			) SUB_DATA
		WHERE 
			1=1 
				AND SUB_DATA.EMP_IDX = #{empIdx, jdbcType=VARCHAR}
			<if test="(sIdx != null and sIdx !='') and (eIdx != null and eIdx !='')">
 				AND SUB_DATA.NUM BETWEEN #{sIdx, jdbcType=VARCHAR} AND #{eIdx, jdbcType=VARCHAR}
        	</if>
		ORDER BY SUB_DATA.APRV_REG_DT DESC, SUB_DATA.APRV_REG_TM DESC
	</select>
	
	<select id="intrAprvInqy10102010" resultType="CamelHashMap" parameterType="java.util.HashMap" resultMap="getAprvInfo">
		/* intrAprvInqy10102010 : 결재 상세 조회 */
			SELECT 
			    	APRV.APRV_IDX
			    ,	APRV.CURR_APRV_SNO 
			    ,   APRV.EMP_IDX
                ,   EMP.EMP_NM
                ,	EMP.DEPT_CD
                ,	DEPT.DEPT_NM
                ,	GRDE.GRADE_NM
			    ,	APRV.APRV_TITLE 
			    ,	APRV.APRV_CONTENT 
			    ,	APRV.TEMPLATE_CD 
			    ,	APRV.REG_DT
			    ,	APRV.REG_TM
			    ,	LINE.STEP_CD
			    ,	LINE.APRV_EMP_IDX
			    ,	LINE.LAST_APRV_YN
			    ,	LINE.APRV_RSLT_DT
			    ,	LINE.APRV_RSLT_TM
			    ,	STEP.STEP_NM
			    ,	APRV.EFCT_SDT
			    ,	APRV.EFCT_EDT
		    	,	CASE WHEN LINE.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN STEP.STEP_NM
				    	ELSE 
				    		CASE WHEN LINE.LAST_APRV_YN = 'N'
	                 	       THEN STEP.STEP_NM || ' 진행 중'
			                ELSE 
            	                CASE WHEN LINE.APRV_RSLT_DT IS NOT NULL
                	                THEN STEP.STEP_NM || ' 완료' 
                    	            ELSE STEP.STEP_NM || ' 진행 중'
                        		END 
                        	END
                        END CURR_STEP_NM		
        FROM INTR_APRV APRV
		INNER JOIN INTR_APRV_LINE LINE
			ON LINE.APRV_IDX = APRV.APRV_IDX
			AND LINE.APRV_SNO = APRV.CURR_APRV_SNO
            AND APRV.TEMPLATE_CD = 'TEMP_0001'
		LEFT OUTER JOIN INTR_STEP STEP
			ON STEP.STEP_CD = LINE.STEP_CD
        LEFT OUTER JOIN INTR_EMP EMP
            ON EMP.EMP_IDX = APRV.EMP_IDX
        LEFT OUTER JOIN INTR_DEPT DEPT
            ON EMP.DEPT_CD = EMP.DEPT_CD
        LEFT OUTER JOIN INTR_GRADE GRDE
            ON GRDE.GRADE_CD = EMP.GRADE_CD
		WHERE APRV.APRV_IDX = #{contentIdx, jdbcType=VARCHAR}
	</select>

	<select id="intrAprvInqy10102011" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqy10102011 : 현재 결재 정보 조회 */
		WITH NEXT_LINE AS
    (
        SELECT 
                DATA.APRV_IDX
            ,   DATA.APRV_SNO AS NEXT_APRV_SNO
            ,   DATA.APRV_RSLT_DT AS NEXT_RSLT_DT
        FROM (
                SELECT 
                        APRV.APRV_IDX, 
                        LINE.APRV_SNO,
                        LINE.APRV_RSLT_DT,
                        ROW_NUMBER() OVER(ORDER BY APRV_SNO ASC) AS NUM
                FROM INTR_APRV APRV
                LEFT OUTER JOIN INTR_APRV_LINE LINE
                    ON LINE.APRV_IDX = APRV.APRV_IDX
                    AND LINE.STEP_CD = 'STEP_0002'
                    AND APRV.TEMPLATE_CD = 'TEMP_0001'
                WHERE APRV.APRV_IDX = #{contentIdx, jdbcType=VARCHAR}
                ORDER BY LINE.APRV_SNO ASC    
            ) DATA
        WHERE DATA.NUM = 1
        )
		SELECT 
                DATA.*,
                NL.*,
                CASE WHEN NL.NEXT_APRV_SNO = DATA.APRV_SNO AND NEXT_RSLT_DT IS NULL 
                    THEN 'Y' ELSE 'N' END AS CANCEL_YN                    
        FROM 
			(
				SELECT
							LINE.APRV_IDX
						, 	LINE.APRV_SNO
						,	LINE.STEP_CD
						,	APRV.EMP_IDX
						,	LINE.APRV_EMP_IDX
						,	LINE.APRV_RSLT_DT
						,	LINE.APRV_RSLT_TM
						,	LINE.APRV_RSLT_RESN
						,	LINE.USE_YN
						, 	ROW_NUMBER() OVER(ORDER BY APRV_SNO ASC) AS NUM
				FROM INTR_APRV_LINE LINE
				INNER JOIN INTR_APRV APRV
					ON APRV.APRV_IDX = LINE.APRV_IDX
					AND LINE.APRV_SNO = APRV.CURR_APRV_SNO
			WHERE APRV.APRV_IDX = #{contentIdx, jdbcType=VARCHAR}
			) DATA 
            INNER JOIN NEXT_LINE NL
                ON NL.APRV_IDX = DATA.APRV_IDX
		WHERE DATA.NUM = 1
	</select>
	
	<select id="intrAprvInqy10103010" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqy10103010 : 결재선 목록 조회 */
		SELECT  
		        LINE.APRV_IDX
		    ,   LINE.APRV_SNO
		    ,   RANK() OVER(ORDER BY LINE.APRV_SNO ASC) AS NUM
		    ,   LINE.STEP_CD
		    ,   STEP.STEP_NM
		    ,   LINE.APRV_EMP_IDX
		    ,   EMP.EMP_NM
		    ,   EMP.DEPT_CD
		    ,   DEPT.DEPT_NM
		    ,   EMP.GRADE_CD
		    ,   GRDE.GRADE_NM
		    ,   LINE.APRV_RSLT_DT
		    ,   LINE.APRV_RSLT_TM
		    ,   LINE.APRV_RSLT_RESN
		    ,	LINE.USE_YN
		    ,	LINE.DISP_ORDER
		FROM INTR_APRV_LINE LINE
		LEFT OUTER JOIN INTR_STEP STEP
			ON LINE.STEP_CD = STEP.STEP_CD
		LEFT OUTER JOIN INTR_EMP EMP
			ON EMP.EMP_IDX = LINE.APRV_EMP_IDX
		LEFT OUTER JOIN INTR_DEPT DEPT
			ON DEPT.DEPT_CD = EMP.DEPT_CD
		LEFT OUTER JOIN INTR_GRADE GRDE
			ON GRDE.GRADE_CD = EMP.GRADE_CD
		WHERE LINE.APRV_IDX = #{contentIdx, jdbcType=VARCHAR}
		ORDER BY LINE.APRV_SNO ASC
	</select>
	
	<select id="intrAprvInqy20101010" resultType="CamelHashMap" parameterType="java.util.HashMap">
		/* intrAprvInqy20101010 : 결재 목록 조회 */
		WITH MAIN_LINE AS
		(
		    SELECT 
		    		APRV.APRV_IDX
                , 	LISTAGG(LINE.APRV_EMP_IDX,',') WITHIN GROUP (ORDER BY LINE.APRV_SNO) AS LINE_EMP_IDX
		    FROM INTR_APRV APRV 
		    INNER JOIN INTR_APRV_LINE LINE
		        ON LINE.APRV_IDX = APRV.APRV_IDX 
		        -- AND LINE.STEP_CD IN ('STEP_0001','STEP_0002','STEP_0003')
		        AND APRV.TEMPLATE_CD = 'TEMP_0001'
		    WHERE 1=1
            GROUP BY APRV.APRV_IDX
		)
		SELECT 
			    	SUB_DATA.* 
		    	,	CASE WHEN SUB_DATA.STEP_CD IN ('STEP_0004','STEP_0005')
				    	THEN SUB_DATA.STEP_NM
				    	ELSE 
				    		CASE WHEN SUB_DATA.LAST_APRV_YN = 'N'
	                 	       THEN SUB_DATA.STEP_NM || ' 진행 중'
			                ELSE 
            	                CASE WHEN SUB_DATA.APRV_RSLT_DT IS NOT NULL
                	                THEN SUB_DATA.STEP_NM || ' 완료' 
                    	            ELSE SUB_DATA.STEP_NM || ' 진행 중'
                        		END 
                        	END
                        END CURR_STEP_NM                                
		    	,   CASE WHEN SUB_DATA.FILE_CNT <![CDATA[>]]> 0
		            THEN 'Y'
		            ELSE 'N'
		            END AS FILE_YN
		FROM (
				SELECT 
				        APRV.APRV_IDX
				    ,	APRV.CURR_APRV_SNO
				    ,   APRV.EMP_IDX
                    ,	LINE.STEP_CD
				    ,	STEP.STEP_NM
				    ,	LINE.LAST_APRV_YN
				    ,   EMP.EMP_NM
				    ,   DEPT.DEPT_NM
				    ,   APRV_TITLE
				    ,   APRV.REG_DT AS APRV_REG_DT
				    ,   APRV.REG_TM AS APRV_REG_TM
                    ,   LINE.APRV_RSLT_DT
                    ,   LINE.APRV_RSLT_TM
                    ,	APRV_EMP.EMP_NM AS APRV_EMP_NM
                    ,	APRV_DEPT.DEPT_NM AS APRV_DEPT_NM
                    ,   ML.LINE_EMP_IDX
				    ,   RANK() OVER(ORDER BY APRV.APRV_IDX) AS NUM
				    ,   COUNT(APRV.APRV_IDX) OVER() AS LIST_CNT
				    ,   (SELECT 
				            COUNT(CONTENT_IDX)
				         FROM INTR_FILE
				         WHERE CONTENT_IDX = APRV.APRV_IDX
				            AND USE_YN = 'Y'
				        ) AS FILE_CNT
				FROM INTR_APRV APRV
                INNER JOIN INTR_APRV_LINE LINE
                    ON LINE.APRV_IDX = APRV.APRV_IDX
                    AND LINE.APRV_SNO = APRV.CURR_APRV_SNO
                    AND APRV.TEMPLATE_CD = 'TEMP_0001'
                LEFT OUTER JOIN INTR_STEP STEP
                    ON STEP.STEP_CD = LINE.STEP_CD
				LEFT OUTER JOIN INTR_EMP EMP
				    ON APRV.EMP_IDX = EMP.EMP_IDX
				LEFT OUTER JOIN INTR_DEPT DEPT
				    ON DEPT.DEPT_CD = EMP.DEPT_CD
				    AND DEPT.USE_YN = 'Y'
                LEFT OUTER JOIN MAIN_LINE ML
                    ON ML.APRV_IDX = APRV.APRV_IDX
                LEFT OUTER JOIN INTR_EMP APRV_EMP
                	ON APRV_EMP.EMP_IDX = LINE.APRV_EMP_IDX
   				LEFT OUTER JOIN INTR_DEPT APRV_DEPT
					ON APRV_DEPT.DEPT_CD = APRV_EMP.DEPT_CD
				WHERE 
					1=1
				    	AND APRV.USE_YN = 'Y'
				    <if test="srchNm != null and srchNm != ''">
		            	AND REGEXP_REPLACE(LOWER(APRV.APRV_TITLE),'[^0-9가-힣A-Za-z]*','') LIKE '%'||REGEXP_REPLACE(LOWER(#{srchNm, jdbcType=VARCHAR}),'[^0-9가-힣A-Za-z]*','')||'%'
		            </if>
		            <if test="srchSdt != null and srchSdt !=''">
		            	AND APRV.REG_DT &gt;= REPLACE(#{srchSdt, jdbcType=VARCHAR},'-','')
		            </if>
		            <if test="srchEdt != null and srchEdt !=''">
		            	AND APRV.REG_DT &lt;= REPLACE(#{srchEdt, jdbcType=VARCHAR},'-','')
		            </if>
			) SUB_DATA
		WHERE 
			1=1 
				AND INSTR(SUB_DATA.LINE_EMP_IDX, #{empIdx, jdbcType=VARCHAR}) > 0
			<if test="(sIdx != null and sIdx !='') and (eIdx != null and eIdx !='')">
 				AND SUB_DATA.NUM BETWEEN #{sIdx, jdbcType=VARCHAR} AND #{eIdx, jdbcType=VARCHAR}
        	</if>
		ORDER BY SUB_DATA.APRV_REG_DT DESC, SUB_DATA.APRV_REG_TM DESC
	</select>
</mapper>