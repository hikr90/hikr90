<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- COMPONENT-SCAN (AUTO-DETECTING)
			- BASE-PACKAGE에 하위 디렉토리를 입력하여 해당 경로에 있는 어노테이션을 자동으로 인식하여 주입하는 기능
			- 파라미터의 순서대로 인식하므로 DAO > SERVICE > CONTROLLER 순으로 작성한다.
			
			- 자동으로 주입을 진행해주므로 편리하나 파라미터를 직접 보낼 수 없다는 단점이 있다.
			- 본 예제에서는 수동 주입 방식으로 진행한다.
	 -->
	
	<!-- <context:component-scan base-package="dao, service, controller" /> -->
	
	<!-- 인젝션 수동 주입
			- ROOT-CONTEXT에서 DAO와 SERVICE를 수동으로 주입했다면 생성한 SERVICEBEAN을 
			- SERVLET-CONTEXT에서 CONTROLLER에 수동으로 주입시켜야한다.
			
			- 의존성 주입의 자동과 수동 방식은 동시에 진행할 수 없다.
			- 컨트롤러는 내부에 빈 객체를 담는 역할을 하므로 BEANS:BEAN태그를 사용한다.
			
			- 본 예제에서는 셋터 인젝션이므로 프로퍼티 태그를 사용한다.
			- 만약 프로퍼티 태그가 없으면 기본 생성자가 동작하는 생성자 주입이 된다.
			- 컨트롤러 주입 빈 태그 프로퍼티의 파라미터 명칭 (NANE)과 컨트롤러에서 받는 파라미터의 명칭은 반드시 같아야한다.
			
			- CLASS의 파라미터는 주입하고자하는 컨트롤러 명칭이다.		
			- REF는 주입되는 객체인 SERVICE가 된다.
			- ROOT-CONTEXT를 통해서 SERVICEIMPL이 들어가니 CONTROLLER에서 DAO를 사용할 수 있게된다.
	-->
	<beans:bean class="controller.BoardController"> 
		<beans:property name="service" ref="serviceBean"></beans:property>
	</beans:bean>
	
</beans:beans>










